{"version":3,"file":"static/js/2716.b96a4f2f.chunk.js","mappings":"2UAiNA,EArMqB,SAAH,GAA6B,IAAvBA,EAAe,EAAfA,gBACtB,EAAeC,EAAAA,EAAAA,UAARC,GAAsB,YAAlB,GAGX,GAUIC,EAAAA,EAAAA,YAAWC,EAAAA,GAPbC,GAFU,EAAVC,WACU,EAAVC,WACK,EAALF,OACAG,EAAQ,EAARA,SACAC,EAAa,EAAbA,cACAC,EAAU,EAAVA,WACAC,EAAO,EAAPA,QACAC,EAAQ,EAARA,SACAC,EAAW,EAAXA,YAEF,GAA8BC,EAAAA,EAAAA,UAASC,EAAAA,IAAc,eAA9CC,EAAO,KAAEC,EAAU,KAC1B,GAAsBH,EAAAA,EAAAA,UAAS,IAAG,eAA3BI,EAAG,KAAEC,EAAM,KAClB,GAA0BL,EAAAA,EAAAA,UAAS,IAAG,eAA/BM,EAAK,KAAEC,EAAQ,KACtB,GAA4BP,EAAAA,EAAAA,UAAS,MAAK,eAAnCQ,EAAM,KAAEC,EAAS,KACxB,GAAwBT,EAAAA,EAAAA,UAAS,IAAG,eAA7BU,EAAI,KAAEC,EAAO,KAEdC,EAAM,yCAAG,+GACUf,EAAQ,OAAO,KAAD,EAAvB,OAARgB,EAAQ,gBACUhB,EAAQ,SAAS,KAAD,EAAzB,OAATiB,EAAS,gBACSjB,EAAQ,YAAY,KAAD,EAA5B,OAATkB,EAAS,iBACGC,QAAQC,IAAI,CAACJ,EAAUC,EAAWC,IAAY,KAAD,GAAzDE,EAAG,OACTZ,EAAOY,EAAI,GAAGC,MACdX,EAASU,EAAI,GAAGC,MAChBP,EAAQM,EAAI,GAAGC,MAAM,4CACtB,kBARW,oCAUZC,EAAAA,EAAAA,YAAU,WACRP,GACF,GAAG,KAEHO,EAAAA,EAAAA,YAAU,WACR,GAAIvB,EAAY,CACd,IAAIwB,GAAW,UAAQxB,GACvB,GAAyB,KAArBwB,EAAYV,MAAoC,OAArBU,EAAYV,KACzC,IACEU,EAAYV,KAAOW,KAAKC,MAAMF,EAAYV,KAG5C,CAFE,MAAOa,GACPC,QAAQC,MAAM,uBAAwBF,EACxC,MAEAH,EAAYV,KAAO,GAErBP,EAAWiB,GACXhC,EAAKsC,eAAeN,EACtB,MACEjB,EAAWF,EAAAA,GAEf,GAAG,CAACL,IAEJ,IAmBM+B,EAAY,yCAAG,WAAOJ,GAAC,yFACR,OAAf3B,EAAmB,iBAaoC,OAZzDG,GAAY,IAEN6B,EAAW,IAAIC,UACZC,IAAI,SAAU5B,EAAQ6B,QAAU,IACzCH,EAASE,IAAI,UAAW5B,EAAQA,SAAW,IAC3C0B,EAASE,IAAI,cAAe5B,EAAQ8B,aAAe,IACnDJ,EAASE,IAAI,SAAU5B,EAAQ+B,QAAU,IACzCL,EAASE,IAAI,SAAU5B,EAAQgC,QAAU,IACzCN,EAASE,IAAI,WAAY5B,EAAQiC,UAAY,IAC7CP,EAASE,IAAI,OAAQ5B,EAAQkC,MAAQ,IACrCR,EAASE,IAAI,OAAQT,KAAKgB,UAAUnC,EAAQQ,OAAS,KAE/C,OAANF,QAAM,IAANA,OAAM,EAANA,EAAQ8B,OAAQV,EAASE,IAAI,QAAStB,EAAO8B,MAAQ,IAAI,UAErCC,MAAM,GAAD,OAAIC,kCAA0B,YAAY,CACjEC,OAAQ,OACRC,KAAMd,IACL,KAAD,GAHS,OAALe,EAAK,iBAIYA,EAAMC,OAAO,KAAD,IAA7B/B,EAAQ,WAEZgC,EAAAA,EAAAA,GAAahC,EAASiC,OAAQjC,EAASkC,KACvC7D,IACA8D,IACAjD,GAAY,IACb,YAECH,EAAW,CAAD,gBAW6C,OAVnDgC,EAAW,IAAIC,UACZC,IAAI,SAAU5B,EAAQ6B,QAAU,IACzCH,EAASE,IAAI,UAAW5B,EAAQA,SAAW,IAC3C0B,EAASE,IAAI,cAAe5B,EAAQ8B,aAAe,IACnDJ,EAASE,IAAI,SAAU5B,EAAQ+B,QAAU,IACzCL,EAASE,IAAI,SAAU5B,EAAQgC,QAAU,IACzCN,EAASE,IAAI,WAAY5B,EAAQiC,UAAY,IAC7CP,EAASE,IAAI,OAAQ5B,EAAQkC,MAAQ,IACrCR,EAASE,IAAI,OAAQT,KAAKgB,UAAiB,OAAPnC,QAAO,IAAPA,OAAO,EAAPA,EAASQ,OAAS,KAEhD,OAANF,QAAM,IAANA,OAAM,EAANA,EAAQ8B,OAAQV,EAASE,IAAI,QAAStB,EAAO8B,MAAQ,IAAI,UACrCC,MAAM,GAAD,OACpBC,kCAA0B,oBAAY5C,EAAWqD,IACpD,CACER,OAAQ,MACRC,KAAMd,IAER,KAAD,GANU,OAALe,EAAK,iBAOYA,EAAMC,OAAO,KAAD,IAA7B/B,EAAQ,WAEZgC,EAAAA,EAAAA,GAAahC,EAASiC,OAAQjC,EAASkC,KACvC7D,IACA8D,IACAjD,GAAY,IACb,4CAEJ,gBAvDiB,sCAyDlB,SAASiD,IACPtD,GAAS,GACTC,EAAc,MACdQ,EAAWF,EAAAA,IACXF,GAAY,EACd,CAEA,IAAM6B,GAAWsB,EAAAA,EAAAA,IACfhD,GApFiB,SAACqB,EAAG4B,GACrB,IAAKA,GAAQ5B,EAAE6B,OAAQ,CACrB,MAAwB7B,EAAE6B,OAAlBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACdlE,EAAKsC,gBAAe,UACjB2B,EAAOC,IAEVnD,GAAW,SAACoD,GACV,OAAO,kBAAKA,GAAM,cAAGF,EAAOC,GAC9B,GACF,MACElE,EAAKsC,gBAAe,UACjByB,EAAO5B,IAEVpB,GAAW,SAACoD,GACV,OAAO,kBAAKA,GAAM,cAAGJ,EAAO5B,GAC9B,GAEJ,GAqEEnB,EACAE,EACAV,EACAc,GAEF,OACE,SAAC8C,EAAA,EAAS,CACRC,UAAW,gBACXC,MAAO9D,EAAa,iBAAmB,oBACvC+D,KAAMpE,EACNqE,MAAO,IACPZ,WAAYA,EAAW,UAEvB,UAAC,IAAI,CACH5D,KAAMA,EACNqE,UAAU,aACVI,SAAUlC,EACVmC,OAAO,aAAY,UAElBlC,EAASmC,KAAI,SAACC,EAAMC,GAAC,OACpB,SAAC,SAAS,CACRR,UAAWO,EAAKP,UAEhBJ,KAAMW,EAAKX,KACXa,MAAOF,EAAKE,MACZC,MAAO,CAAEC,aAAc,OAAQ,UAE/B,gCACGJ,EAAKK,MACLL,EAAKM,SAPHL,EASK,KAGd,uBAAG,WACH,gBAAKR,UAAU,SAAQ,UACrB,SAACc,EAAA,EAAW,CACV/D,OAAQA,EACRC,UAAWA,EACX+D,SAAU5E,OAId,SAAC,SAAS,CAAC6D,UAAU,mBAAkB,UACrC,SAAC,KAAM,CACLgB,SAAS,SACTC,MAAM,SAAC,MAAa,IACpBC,UAAS7E,EAAwB,SAEhCF,EAAa,UAAY,qBAMtC,E,iGC7GA,EAzFyB,SAAH,GAA6B,IAAvBL,EAAK,EAALA,MAAOG,EAAQ,EAARA,SACjC,EAAeP,EAAAA,EAAAA,UAARC,GAAsB,YAAlB,GAEX,GAAkDC,EAAAA,EAAAA,YAAWC,EAAAA,GAArDM,EAAU,EAAVA,WAAYH,EAAU,EAAVA,WAAYE,EAAa,EAAbA,cAChC,GAAgCK,EAAAA,EAAAA,UAAS,CAAE4E,MAAO,GAAIC,OAAQ,KAAK,eAA5DC,EAAQ,KAAEC,EAAW,KACtB/B,EAAa,WACjBtD,GAAS,GACTC,EAAc,KAChB,EAEMgC,EAAY,yCAAG,8FACfmD,EAASF,QAAUE,EAASD,OAAM,gBAID,OAH7BG,EAAO,CACXhD,YAAa8C,EAASF,OAEV,sBAAsB,EAAD,OACZnF,EAAWuF,EAAMpF,EAAWqD,GADrC,uBACgD,KAAD,GAAvDpC,EAAQ,WAEZgC,EAAAA,EAAAA,GAAahC,EAASiC,OAAQjC,EAASkC,KACvCC,KACD,wBAEDH,EAAAA,EAAAA,GAAa,IAAK,oCAAiC,4CAEtD,kBAdiB,mCAgBZoC,EAAa,SAAC1D,GAClB,MAAwBA,EAAE6B,OAAlBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACdlE,EAAKsC,gBAAe,UACjB2B,EAAOC,IAEVyB,GAAY,SAACxB,GACX,OAAO,kBAAKA,GAAM,cAAGF,EAAOC,GAC9B,GACF,EACA,OACE,SAACE,EAAA,EAAS,CACRC,UAAW,gBACXC,MAAO,wBACPC,KAAMpE,EACNqE,MAAO,IACPZ,WAAYA,EAAW,UAEvB,UAAC,IAAI,CACH5D,KAAMA,EACNqE,UAAU,aACVI,SAAUlC,EACVmC,OAAO,aAAY,WAEnB,UAAC,SAAS,CACRK,MAAO,CAAEC,aAAc,OACvBf,KAAK,QACLa,MAAO,CAAC,CAAEgB,UAAU,EAAMC,QAAS,uBAAwB,WAE3D,kBAAOC,QAAQ,GAAE,SAAC,yBAClB,SAAC,aAAc,CACb9B,MAAOwB,EAASF,MAChBvB,KAAK,QACLgC,SAAUJ,QAId,UAAC,SAAS,CACRd,MAAO,CAAEC,aAAc,OACvBf,KAAK,SACLa,MAAO,CAAC,CAAEgB,UAAU,EAAMC,QAAS,uBAAwB,WAE3D,kBAAOC,QAAQ,GAAE,SAAC,kCAClB,SAAC,aAAc,CACb9B,MAAOwB,EAASD,OAChBxB,KAAK,SACLgC,SAAUJ,QAId,SAAC,SAAS,CAACxB,UAAU,mBAAkB,UACrC,SAAC,KAAM,CACLgB,SAAS,SACTC,MAAM,SAAC,MAAa,IACpB,SACD,qBAOX,ECDA,EAjFsB,WACpB,IAEA,GASIrF,EAAAA,EAAAA,YAAWC,EAAAA,GARbO,EAAO,EAAPA,QACAyF,EAAU,EAAVA,WACA/F,EAAK,EAALA,MACAG,EAAQ,EAARA,SACAC,EAAa,EAAbA,cACA4F,EAAM,EAANA,OACAzF,EAAQ,EAARA,SACAC,EAAW,EAAXA,YAEF,GAAgCC,EAAAA,EAAAA,UAAS,IAAG,eAArCwF,EAAQ,KAAEC,EAAW,KACpBC,GAAWC,EAAAA,EAAAA,GAAUH,GAArBE,OACR,GAAgD1F,EAAAA,EAAAA,WAAS,GAAM,eAAxD4F,EAAgB,KAAEC,EAAmB,KACtCC,EAAW,yCAAG,yFACA,OAAlB/F,GAAY,GAAM,SACKF,EAjBX,WAiB0B,KAAD,GAA/BgB,EAAQ,UAGZd,GAAY,GACZ0F,EAAY5E,EAASK,OACtB,2CACF,kBARgB,mCAmBX6E,EAAY,yCAAG,WAAO9C,GAAE,4FACLqC,EAAW,UAAWrC,GAAI,KAAD,GAA1CpC,EAAQ,WAEZgC,EAAAA,EAAAA,GAAahC,EAASiC,OAAQjC,EAASkC,KACvC+C,KACD,2CACF,gBANiB,uCAOlB3E,EAAAA,EAAAA,YAAU,WACR2E,GACF,GAAG,IAEH,IAAME,GAAU9F,EAAAA,EAAAA,KArBG,SAACqB,GAClB5B,EAAc4B,GACd7B,GAAS,EACX,GAkBoCqG,GAjBb,SAACxE,GACtB5B,EAAc4B,GACdsE,GAAoB,EAEtB,IAeA,OACE,iCACE,SAACI,EAAA,EAAM,CAAC9C,KAAM,WAAY+C,KAAM,UAAWC,KAAM,qBACjD,iBAAK1C,UAAU,WAAU,WACvB,SAAC2C,EAAA,EAAQ,CAACC,WAAY3G,IAErB8F,EAASc,OAAS,GACjB,SAACC,EAAA,EAAK,CAACP,QAASA,EAASQ,MAAOd,KAEhC,gBAAKjC,UAAU,SAAQ,SACpB3D,GACC,SAAC2G,EAAA,EAAQ,KAET,SAAC,IAAK,CACJC,MAAOC,EAAAA,EAAAA,uBACPC,aAAa,0BAAM,0CAM5BhB,IACC,SAAC,EAAgB,CACfrG,MAAOqG,EACPlG,SAAUmG,IAGbtG,IAAS,SAAC,EAAY,CAACL,gBAAiB4G,IACxCP,IAAU,SAACsB,EAAA,EAAa,CAACC,WAAYhB,MAG5C,C,iFCxDA,IAhCoB,SAAH,GAAyC,IAAnCrF,EAAS,EAATA,UAAWD,EAAM,EAANA,OAAQgE,EAAQ,EAARA,SAClCuC,GAASC,EAAAA,EAAAA,cACb,SAACC,GACC,IAAM3E,EAAO2E,EAAc,GAC3BxG,EAAU,CAAE6B,KAAAA,EAAM4E,QAASC,IAAIC,gBAAgB9E,IACjD,GACA,CAAC7B,IAEH,GAAsD4G,EAAAA,EAAAA,IAAY,CAChEC,OAAQ,CACN,YAAa,CAAC,QACd,YAAa,CAAC,QACd,aAAc,CAAC,UAEjBC,YAAY,EACZR,OAAAA,IAPMS,EAAY,EAAZA,aAAcC,EAAa,EAAbA,cAAeC,EAAY,EAAZA,aAUrC,OACE,mCAASF,KAAc,IAAE/D,UAAU,OAAM,WACvC,4BAAWgE,MACVC,GACC,uBAAG,6BACO,OAARlD,QAAQ,IAARA,GAAAA,EAAUpC,MAAc,OAAN5B,QAAM,IAANA,GAAAA,EAAQ0G,SAC5B,gBAAKS,KAAW,OAANnH,QAAM,IAANA,OAAM,EAANA,EAAQ0G,WAAmB,OAAR1C,QAAQ,IAARA,OAAQ,EAARA,EAAUpC,MAAMwF,IAAI,MAEjD,uBAAG,wEAIX,C","sources":["components/administracion/usuarios/ModalUsuario.jsx","components/administracion/usuarios/ModalContrasenia.jsx","components/administracion/usuarios/UsuarioLayout.jsx","components/personal/DragAndDrop.jsx"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { usuarioValues } from \"../../../data/initalValues\";\nimport { useEffect } from \"react\";\nimport { CrudContext } from \"../../../context/CrudContext\";\nimport MainModal from \"../../modal/MainModal\";\nimport { Button, Form } from \"antd\";\nimport { modalUsuario } from \"../../../data/FormValues\";\nimport { notificacion } from \"../../../helpers/mensajes\";\nimport { AiOutlineForm } from \"react-icons/ai\";\nimport \"../styles/modalUsuario.css\";\nimport DragAndDrop from \"../../personal/DragAndDrop\";\n\nconst ModalUsuario = ({ actualizarTabla }) => {\n  const [form] = Form.useForm();\n  const route = \"usuario\";\n\n  const {\n    createData,\n    updateData,\n    modal,\n    setModal,\n    setDataToEdit,\n    dataToEdit,\n    getData,\n    cargando,\n    setCargando,\n  } = useContext(CrudContext);\n  const [usuario, setUsuario] = useState(usuarioValues);\n  const [rol, setRol] = useState([]);\n  const [cargo, setCargo] = useState([]);\n  const [avatar, setAvatar] = useState(null);\n  const [caja, setCaja] = useState([]);\n\n  const getAll = async () => {\n    const response = await getData(\"rol\");\n    const response1 = await getData(\"cargo\");\n    const response2 = await getData(\"sucursal\");\n    const all = await Promise.all([response, response1, response2]);\n    setRol(all[0].data);\n    setCargo(all[1].data);\n    setCaja(all[2].data);\n  };\n\n  useEffect(() => {\n    getAll();\n  }, []);\n\n  useEffect(() => {\n    if (dataToEdit) {\n      let updatedData = { ...dataToEdit };\n      if (updatedData.caja !== \"\" && updatedData.caja !== null) {\n        try {\n          updatedData.caja = JSON.parse(updatedData.caja);\n        } catch (e) {\n          console.error(\"Error parsing caja: \", e);\n        }\n      } else {\n        updatedData.caja = [];\n      }\n      setUsuario(updatedData);\n      form.setFieldsValue(updatedData);\n    } else {\n      setUsuario(usuarioValues);\n    }\n  }, [dataToEdit]);\n\n  const handleData = (e, text) => {\n    if (!text && e.target) {\n      const { name, value } = e.target;\n      form.setFieldsValue({\n        [name]: value,\n      });\n      setUsuario((values) => {\n        return { ...values, [name]: value };\n      });\n    } else {\n      form.setFieldsValue({\n        [text]: e,\n      });\n      setUsuario((values) => {\n        return { ...values, [text]: e };\n      });\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    if (dataToEdit === null) {\n      setCargando(true);\n\n      const formData = new FormData();\n      formData.set(\"nombre\", usuario.nombre || \"\");\n      formData.set(\"usuario\", usuario.usuario || \"\");\n      formData.set(\"contrasenia\", usuario.contrasenia || \"\");\n      formData.set(\"estado\", usuario.estado || \"\");\n      formData.set(\"rol_id\", usuario.rol_id || \"\");\n      formData.set(\"cargo_id\", usuario.cargo_id || \"\");\n      formData.set(\"foto\", usuario.foto || \"\");\n      formData.set(\"caja\", JSON.stringify(usuario.caja) || \"\");\n\n      avatar?.file && formData.set(\"image\", avatar.file || \"\");\n\n      const query = await fetch(`${process.env.REACT_APP_BASE}/usuario`, {\n        method: \"POST\",\n        body: formData,\n      });\n      const response = await query.json();\n      if (response) {\n        notificacion(response.status, response.msg);\n        actualizarTabla();\n        closeModal();\n        setCargando(false);\n      }\n    }\n    if (dataToEdit) {\n      const formData = new FormData();\n      formData.set(\"nombre\", usuario.nombre || \"\");\n      formData.set(\"usuario\", usuario.usuario || \"\");\n      formData.set(\"contrasenia\", usuario.contrasenia || \"\");\n      formData.set(\"estado\", usuario.estado || \"\");\n      formData.set(\"rol_id\", usuario.rol_id || \"\");\n      formData.set(\"cargo_id\", usuario.cargo_id || \"\");\n      formData.set(\"foto\", usuario.foto || \"\");\n      formData.set(\"caja\", JSON.stringify(usuario?.caja) || \"\");\n\n      avatar?.file && formData.set(\"image\", avatar.file || \"\");\n      const query = await fetch(\n        `${process.env.REACT_APP_BASE}/usuario/${dataToEdit.id}`,\n        {\n          method: \"PUT\",\n          body: formData,\n        }\n      );\n      const response = await query.json();\n      if (response) {\n        notificacion(response.status, response.msg);\n        actualizarTabla();\n        closeModal();\n        setCargando(false);\n      }\n    }\n  };\n\n  function closeModal() {\n    setModal(false);\n    setDataToEdit(null);\n    setUsuario(usuarioValues);\n    setCargando(false);\n  }\n\n  const formData = modalUsuario(\n    usuario,\n    handleData,\n    rol,\n    cargo,\n    dataToEdit,\n    caja\n  );\n  return (\n    <MainModal\n      className={\"modal-usuario\"}\n      title={dataToEdit ? \"Editar usuario\" : \"Registrar usuario\"}\n      open={modal}\n      width={400}\n      closeModal={closeModal}\n    >\n      <Form\n        form={form}\n        className=\"modal-body\"\n        onFinish={handleSubmit}\n        layout=\"horizontal\"\n      >\n        {formData.map((item, i) => (\n          <Form.Item\n            className={item.className}\n            key={i}\n            name={item.name}\n            rules={item.rules}\n            style={{ marginBottom: \"8px\" }}\n          >\n            <>\n              {item.label}\n              {item.type}\n            </>\n          </Form.Item>\n        ))}\n\n        <p>Firma</p>\n        <div className=\"avatar\">\n          <DragAndDrop\n            avatar={avatar}\n            setAvatar={setAvatar}\n            selected={dataToEdit}\n          />\n        </div>\n\n        <Form.Item className=\"button-container\">\n          <Button\n            htmlType=\"submit\"\n            icon={<AiOutlineForm />}\n            loading={cargando ? true : false}\n          >\n            {dataToEdit ? \" Editar\" : \" Registrar\"}\n          </Button>\n        </Form.Item>\n      </Form>\n    </MainModal>\n  );\n};\n\nexport default ModalUsuario;\n","import { Button, Form, Input } from \"antd\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { AiOutlineForm } from \"react-icons/ai\";\nimport { CrudContext } from \"../../../context/CrudContext\";\nimport { notificacion } from \"../../../helpers/mensajes\";\nimport MainModal from \"../../modal/MainModal\";\n\nconst ModalContrasenia = ({ modal, setModal }) => {\n  const [form] = Form.useForm();\n\n  const { dataToEdit, updateData, setDataToEdit } = useContext(CrudContext);\n  const [password, setPassword] = useState({ nueva: \"\", nueva2: \"\" });\n  const closeModal = () => {\n    setModal(false);\n    setDataToEdit(null);\n  };\n\n  const handleSubmit = async () => {\n    if (password.nueva === password.nueva2) {\n      const info = {\n        contrasenia: password.nueva,\n      };\n      const route = \"usuario/contrasenia\";\n      const response = await updateData(info, dataToEdit.id, route);\n      if (response) {\n        notificacion(response.status, response.msg);\n        closeModal();\n      }\n    } else {\n      notificacion(500, \"Las contraseñas no coinciden.\");\n    }\n  };\n\n  const handleData = (e) => {\n    const { name, value } = e.target;\n    form.setFieldsValue({\n      [name]: value,\n    });\n    setPassword((values) => {\n      return { ...values, [name]: value };\n    });\n  };\n  return (\n    <MainModal\n      className={\"modal-usuario\"}\n      title={\"Cambiar contraseña\"}\n      open={modal}\n      width={400}\n      closeModal={closeModal}\n    >\n      <Form\n        form={form}\n        className=\"modal-body\"\n        onFinish={handleSubmit}\n        layout=\"horizontal\"\n      >\n        <Form.Item\n          style={{ marginBottom: \"8px\" }}\n          name=\"nueva\"\n          rules={[{ required: true, message: \"Campo obligatorio!\" }]}\n        >\n          <label htmlFor=\"\">Nueva contraseña</label>\n          <Input.Password\n            value={password.nueva}\n            name=\"nueva\"\n            onChange={handleData}\n          />\n        </Form.Item>\n\n        <Form.Item\n          style={{ marginBottom: \"8px\" }}\n          name=\"nueva2\"\n          rules={[{ required: true, message: \"Campo obligatorio!\" }]}\n        >\n          <label htmlFor=\"\">Confirme nueva contraseña</label>\n          <Input.Password\n            value={password.nueva2}\n            name=\"nueva2\"\n            onChange={handleData}\n          />\n        </Form.Item>\n\n        <Form.Item className=\"button-container\">\n          <Button\n            htmlType=\"submit\"\n            icon={<AiOutlineForm />}\n            // loading={cargando ? true : false}\n          >\n            Actualizar\n          </Button>\n        </Form.Item>\n      </Form>\n    </MainModal>\n  );\n};\n\nexport default ModalContrasenia;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { CrudContext } from \"../../../context/CrudContext\";\nimport ModalUsuario from \"./ModalUsuario\";\nimport Header from \"../../header/Header\";\nimport Tabla from \"../../tabla/Tabla\";\nimport Buscador from \"../Buscador\";\nimport { usuario } from \"../../../data/dataTable\";\nimport useSearch from \"../../../hooks/useSearch\";\nimport ModalPermisos from \"./ModalPermisos\";\nimport { notificacion } from \"../../../helpers/mensajes\";\nimport { Empty } from \"antd\";\nimport Cargando from \"../../cargando/Cargando\";\nimport ModalContrasenia from \"./ModalContrasenia\";\n\nconst UsuarioLayout = () => {\n  const route = \"usuario\";\n\n  const {\n    getData,\n    deleteData,\n    modal,\n    setModal,\n    setDataToEdit,\n    modal1,\n    cargando,\n    setCargando,\n  } = useContext(CrudContext);\n  const [usuarios, setUsuarios] = useState([]);\n  const { result } = useSearch(usuarios);\n  const [modalContrasenia, setModalContrasenia] = useState(false);\n  const getUsuarios = async () => {\n    setCargando(true);\n    const response = await getData(route);\n\n    if (response) {\n      setCargando(false);\n      setUsuarios(response.data);\n    }\n  };\n  const handleEdit = (e) => {\n    setDataToEdit(e);\n    setModal(true);\n  };\n  const handlePassword = (e) => {\n    setDataToEdit(e);\n    setModalContrasenia(true);\n\n  };\n\n  const handleDelete = async (id) => {\n    const response = await deleteData(\"usuario\", id);\n    if (response) {\n      notificacion(response.status, response.msg);\n      getUsuarios();\n    }\n  };\n  useEffect(() => {\n    getUsuarios();\n  }, []);\n\n  const columns = usuario(handleEdit, handleDelete, handlePassword);\n\n  return (\n    <>\n      <Header text={\"Usuarios\"} user={\"Usuario\"} ruta={\"/administracion\"} />\n      <div className=\"margenes\">\n        <Buscador abrirModal={setModal} />\n\n        {usuarios.length > 0 ? (\n          <Tabla columns={columns} table={result} />\n        ) : (\n          <div className=\"noData\">\n            {cargando ? (\n              <Cargando />\n            ) : (\n              <Empty\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                description={<span>No hay registros para mostrar.</span>}\n              />\n            )}\n          </div>\n        )}\n      </div>\n      {modalContrasenia && (\n        <ModalContrasenia\n          modal={modalContrasenia}\n          setModal={setModalContrasenia}\n        />\n      )}\n      {modal && <ModalUsuario actualizarTabla={getUsuarios} />}\n      {modal1 && <ModalPermisos actualizar={getUsuarios} />}\n    </>\n  );\n};\n\nexport default UsuarioLayout;\n","import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\n\nimport \"./styles/modalRegistroPersonal.css\";\n\nconst DragAndDrop = ({ setAvatar, avatar, selected }) => {\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n      setAvatar({ file, preview: URL.createObjectURL(file) });\n    },\n    [setAvatar]\n  );\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept: {\n      \"image/png\": [\".png\"],\n      \"image/jpg\": [\".jpg\"],\n      \"image/jpeg\": [\".jpeg\"],\n    },\n    noKeyboard: true,\n    onDrop,\n  });\n\n  return (\n    <div {...getRootProps()} className=\"drag\">\n      <input {...getInputProps()} />\n      {isDragActive ? (\n        <p>Coloca la imagen aqui...</p>\n      ) : selected?.foto || avatar?.preview ? (\n        <img src={avatar?.preview || selected?.foto} alt=\"\" />\n      ) : (\n        <p>Arrastra la imagen aqui, o has click para seleccionar la imagen.</p>\n      )}\n    </div>\n  );\n};\n\nexport default DragAndDrop;\n"],"names":["actualizarTabla","Form","form","useContext","CrudContext","modal","createData","updateData","setModal","setDataToEdit","dataToEdit","getData","cargando","setCargando","useState","usuarioValues","usuario","setUsuario","rol","setRol","cargo","setCargo","avatar","setAvatar","caja","setCaja","getAll","response","response1","response2","Promise","all","data","useEffect","updatedData","JSON","parse","e","console","error","setFieldsValue","handleSubmit","formData","FormData","set","nombre","contrasenia","estado","rol_id","cargo_id","foto","stringify","file","fetch","process","method","body","query","json","notificacion","status","msg","closeModal","id","modalUsuario","text","target","name","value","values","MainModal","className","title","open","width","onFinish","layout","map","item","i","rules","style","marginBottom","label","type","DragAndDrop","selected","htmlType","icon","loading","nueva","nueva2","password","setPassword","info","handleData","required","message","htmlFor","onChange","deleteData","modal1","usuarios","setUsuarios","result","useSearch","modalContrasenia","setModalContrasenia","getUsuarios","handleDelete","columns","Header","user","ruta","Buscador","abrirModal","length","Tabla","table","Cargando","image","Empty","description","ModalPermisos","actualizar","onDrop","useCallback","acceptedFiles","preview","URL","createObjectURL","useDropzone","accept","noKeyboard","getRootProps","getInputProps","isDragActive","src","alt"],"sourceRoot":""}