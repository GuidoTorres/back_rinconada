{"version":3,"file":"static/js/871.624bd952.chunk.js","mappings":"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","sources":["components/planillas/BuscadorProgramacion.jsx","components/planillas/pagos/ModalJuntarTeletrans.jsx","components/planillas/pagos/PagosLayout.jsx"],"sourcesContent":["import React from \"react\";\nimport { Button } from \"antd\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst BuscadorProgramacion = ({ setFilterText, setModal }) => {\n  const handleModal = () => {\n    setModal(true);\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <div\n        style={{\n          width: \"300px\",\n        }}\n      >\n        <Search\n          placeholder=\"Ingresa un termino aqui...\"\n          onChange={(e) => setFilterText(e.target.value)}\n        />\n      </div>\n      <div>\n        <Button onClick={handleModal} style={{ width: \"150px\" }}>\n          Pago Multiple\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default BuscadorProgramacion;\n","import {\n  Alert,\n  Button,\n  Card,\n  Col,\n  ConfigProvider,\n  DatePicker,\n  Divider,\n  Form,\n  Input,\n  List,\n  Row,\n  Select,\n  Space,\n  Typography,\n} from \"antd\";\nimport dayjs from \"dayjs\";\nimport { useContext, useEffect, useState } from \"react\";\nimport locale from \"antd/es/date-picker/locale/es_ES\";\nimport { incentivosVariosValues } from \"../../../data/initalValues\";\nimport MainModal from \"../../modal/MainModal\";\nimport { AiOutlineForm } from \"react-icons/ai\";\nimport { CrudContext } from \"../../../context/CrudContext\";\nimport { notificacion } from \"../../../helpers/mensajes\";\n\nfunction ModalJuntarTeletrans({\n  open,\n  setModal,\n  trabajadores,\n  actualizarTabla,\n  closeModalSubmit = () => {},\n  dataToEdit,\n  setDataToEdit = () => {},\n}) {\n  const [form] = Form.useForm();\n  const { Text } = Typography;\n\n  const { updateData, createData, cargando, setCargando } =\n    useContext(CrudContext);\n\n  const dataTrabajadores = trabajadores?.map((item) => {\n    return {\n      value: item.contrato_id,\n      label: item.nombre,\n    };\n  });\n\n  const closeModal = () => {\n\n    setModal(false)\n  }\n\n  const [seleccionados, setSeleccionados] = useState([]);\n\n  const handleChange = (e) => {\n    setSeleccionados(e);\n  };\n\n  const [trabajadoresSeleccionados, setTrabajadoresSeleccionados] = useState(\n    []\n  );\n\n  useEffect(() => {\n    if (seleccionados.length > 0) {\n      const data = trabajadores.filter((item) =>\n        seleccionados.includes(item.contrato_id)\n      );\n      setTrabajadoresSeleccionados(data);\n    }\n  }, [seleccionados]);\n\n  const [incentivo, setIncentivo] = useState(incentivosVariosValues);\n\n  const handleData = (e, text) => {\n    if (!text && e.target) {\n      const { name, value } = e.target;\n      form.setFieldsValue({\n        [name]: value,\n      });\n      setIncentivo((values) => {\n        return { ...values, [name]: value };\n      });\n    } else {\n      form.setFieldsValue({\n        [text]: e,\n      });\n      setIncentivo((values) => {\n        return { ...values, [text]: e };\n      });\n    }\n  };\n\n  const [trabajadoresSave, setTrabajadoresSave] = useState([]);\n  useEffect(() => {\n    if (trabajadoresSeleccionados.length > 0) {\n      const data = trabajadoresSeleccionados.map((item) => {\n        return {\n          nombre: item.nombre,\n          contrato_id: item.contrato_id,\n          teletrans: item.teletrans || \"\",\n        };\n      });\n      if (dataToEdit) {\n        setTrabajadoresSave(\n          incentivo.trabajadores.map((item) => {\n            return {\n              ...item,\n              teletrans: parseFloat(item.teletrans),\n            };\n          })\n        );\n      } else {\n        setTrabajadoresSave(data);\n      }\n    }\n  }, [trabajadoresSeleccionados]);\n\n  const handleDataTrabajador = (e, id) => {\n    const index = trabajadoresSave.findIndex((item) => item.contrato_id === id);\n    trabajadoresSave[index] = {\n      ...trabajadoresSave[index],\n      teletrans: parseFloat(e.target.value),\n    };\n    setTrabajadoresSave([...trabajadoresSave]);\n  };\n\n  const totalTeletrans = () => {\n    let total = 0;\n    trabajadoresSave.forEach((item) => {\n      total += item.teletrans;\n    });\n    return total;\n  };\n\n  const handleSubmit = async () => {\n    const route = \"pago/programacion/multiple\";\n\n    setCargando(true);\n    const data = {\n      observacion: incentivo.observacion,\n      fecha_pago: dayjs(incentivo.fecha_pago).format(\"YYYY-MM-DD\") || \"\",\n      teletrans: totalTeletrans(),\n      tipo: \"pago\",\n      trabajadores: trabajadoresSave.map((item) => {\n        return {\n          contrato_id: item.contrato_id,\n          teletrans: item.teletrans,\n        };\n      }),\n    };\n    if (dataToEdit) {\n      const response = await updateData(\n        data,\n        incentivo.pago_id,\n        \"pago/multiple\"\n      );\n      if (response) {\n        notificacion(response.status, response.msg);\n        actualizarTabla();\n        handleClose();\n      }\n    } else {\n      const response = await createData(data, route);\n      if (response) {\n        notificacion(response.status, response.msg);\n        actualizarTabla();\n        handleClose();\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (dataToEdit) {\n      setIncentivo({\n        ...dataToEdit,\n        fecha_pago: dayjs(dataToEdit.fecha_pago).format(\"YYYY-MM-DD\"),\n      });\n      setSeleccionados(dataToEdit.trabajadores.map((item) => item.contrato_id));\n      setTrabajadoresSave(dataToEdit.trabajadores);\n    }\n  }, [dataToEdit]);\n\n  const handleClose = () => {\n    setDataToEdit(null);\n    closeModal();\n    closeModalSubmit();\n  };\n\n  return (\n    <MainModal\n      open={open}\n      closeModal={dataToEdit ? handleClose : closeModal}\n      title=\"Juntar Teletrans\"\n      width={800}\n    >\n      <Form\n        form={form}\n        className=\"modal-body\"\n        onFinish={handleSubmit}\n        layout=\"vertical\"\n      >\n        <Divider orientation=\"left\">Datos</Divider>\n        <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n          <Form.Item label=\"Seleccione trabajadores\">\n            <Select\n              showSearch\n              mode=\"multiple\"\n              placeholder=\"Seleccione trabajadores\"\n              style={{ width: \"100%\" }}\n              allowClear\n              value={seleccionados}\n              onChange={handleChange}\n              options={dataTrabajadores}\n              disabled={dataToEdit ? true : false}\n              filterOption={(input, option) =>\n                option.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }\n            />\n          </Form.Item>\n          <Form.Item label=\"Observación\">\n            <Input\n              name=\"observacion\"\n              value={incentivo.observacion}\n              placeholder=\"Observación\"\n              onChange={(e) => handleData(e)}\n            />\n          </Form.Item>\n          <Form.Item label=\"Fecha\">\n            <ConfigProvider locale={locale}>\n              <DatePicker\n                allowClear={false}\n                value={dayjs(incentivo.fecha_pago)}\n                name=\"fecha_pago\"\n                placeholder=\"Fecha de Pago\"\n                picker=\"day\"\n                onChange={(e) => handleData(e, \"fecha_pago\")}\n                style={{\n                  width: \"100%\",\n                }}\n                format={\"YYYY-MM-DD\"}\n              />\n            </ConfigProvider>\n          </Form.Item>\n        </Space>\n        <Divider orientation=\"left\">Trabajadores</Divider>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: 4,\n          }}\n        >\n          <Card style={{ width: \"100%\" }}>\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={trabajadoresSave}\n              renderItem={(item) => (\n                <List.Item>\n                  <Row key={item.contrato_id} style={{ width: \"100%\" }}>\n                    <Col span={18}>\n                      <Space direction=\"vertical\">{item.nombre}</Space>\n                    </Col>\n                    <Col span={6}>\n                      <Space direction=\"vertical\">\n                        <Input\n                          value={item.teletrans}\n                          placeholder=\"Teletrans\"\n                          type=\"number\"\n                          min={0}\n                          onChange={(e) =>\n                            handleDataTrabajador(e, item.contrato_id)\n                          }\n                          required\n                        />\n                      </Space>\n                    </Col>\n                  </Row>\n                </List.Item>\n              )}\n            />\n            <Space\n              direction=\"horizontal\"\n              style={{\n                width: \"100%\",\n                justifyContent: \"end\",\n                alignItems: \"center\",\n                padding: 24,\n              }}\n            >\n              <Text type={totalTeletrans() % 4 === 0 ? \"success\" : \"danger\"}>\n                TOTAL DE TELETRANS\n              </Text>\n              <Alert\n                message={totalTeletrans()}\n                type={totalTeletrans() % 4 === 0 ? \"success\" : \"error\"}\n              />\n            </Space>\n          </Card>\n        </div>\n        <Space\n          direction=\"horizontal\"\n          style={{\n            width: \"100%\",\n            marginTop: 20,\n            justifyContent: \"end\",\n          }}\n        >\n          <Button onClick={closeModal}>Cancelar</Button>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            icon={<AiOutlineForm />}\n            loading={cargando ? true : false}\n            disabled={trabajadoresSave.length === 0 ? true : false}\n          >\n            {/* {dataToEdit ? \"Editar\" : \"Registrar\"} */}\n            Registrar\n          </Button>\n        </Space>\n      </Form>\n    </MainModal>\n  );\n}\nexport default ModalJuntarTeletrans;\n","import { Col, Empty, Row } from \"antd\";\nimport dayjs from \"dayjs\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { AiOutlineForm } from \"react-icons/ai\";\nimport { CrudContext } from \"../../../context/CrudContext\";\nimport { PlanillaContext } from \"../../../context/PlanillaContext\";\nimport { pagosLayout } from \"../../../data/dataTable\";\nimport { notificacion } from \"../../../helpers/mensajes\";\nimport ButtonAdd from \"../../Button/ButtonAdd\";\nimport Header from \"../../header/Header\";\nimport Tabla from \"../../tabla/Tabla\";\nimport BuscadorProgramacion from \"../BuscadorProgramacion\";\nimport ModalJuntarTeletrans from \"./ModalJuntarTeletrans\";\n\nconst PagosLayout = () => {\n  const { getData, createData } = useContext(CrudContext);\n  // const { juntarTeletrans, setJuntarTeletrans } = useContext(PlanillaContext);\n  const [pagos, setPagos] = useState([]);\n  const [modal, setModal] = useState(false);\n\n  const [openModalIndivudual, setOpenModalIndivudual] = useState(false);\n\n  const handleCloseModalIndivudual = () => {\n    setOpenModalIndivudual(false);\n  };\n\n  const [dataPagos, setDataPagos] = useState([]);\n  const [filterText, setFilterText] = useState(\"\");\n  const [search, setSearch] = useState([]);\n\n  const getPagos = async () => {\n    const response = await getData(\"programacion\");\n\n    if (response) {\n      const filterNull = response.data.filter((item) => item !== null);\n      setPagos(filterNull);\n      // Guardar valores iniciales de teletrans y volquetes en cada objeto de la fila\n      const initialValues = filterNull.map((item) => ({\n        ...item,\n        initialTeletrans: item.teletrans,\n        initialVolquetes: item.volquetes,\n        fecha_pago: dayjs(new Date()).format(\"YYYY-MM-DD\"),\n      }));\n      setPagos(initialValues);\n    }\n  };\n\n  useEffect(() => {\n    getPagos();\n  }, []);\n\n  const handleData = (event, e, i) => {\n    const { name, value } = event.target;\n\n    setPagos((state) =>\n      state.map((item, index) =>\n        index === i\n          ? {\n              ...item,\n              [name]: value,\n              contrato_id: e?.contrato_id,\n              id: e?.pagos?.pagos?.at(-1)?.id || \"\",\n            }\n          : item\n      )\n    );\n  };\n  const postPagos = async (e) => {\n    const info = {\n      observacion: e.observacion,\n      fecha_pago: e.fecha_pago,\n      volquetes: e.initialVolquetes,\n      teletrans: e.initialTeletrans,\n      tipo: \"pago\",\n      trabajadores: [\n        {\n          volquetes: e.initialVolquetes,\n          teletrans: e.initialTeletrans,\n          contrato_id: e.contrato_id,\n          trabajador_dni: e.dni,\n        },\n      ],\n    };\n    const response = await createData(info, \"pago/programacion/multiple\");\n\n    if (response) {\n      notificacion(response.status, response.msg);\n      getPagos();\n    }\n  };\n\n  useEffect(() => {\n    const filtered =\n      pagos &&\n      pagos.filter(\n        (item) =>\n          item?.nombre?.toLowerCase()?.includes(filterText.toLowerCase()) ||\n          item?.cargo?.toLowerCase()?.includes(filterText.toLowerCase())\n      );\n\n    setSearch(filtered);\n  }, [filterText, pagos]);\n\n  const columns = pagosLayout(handleData, postPagos);\n\n  return (\n    <>\n      <Header text={\"Programación de pagos\"} ruta={\"/planilla\"} />\n      <div className=\"margenes\">\n        <BuscadorProgramacion\n          setModal={setModal}\n          setFilterText={setFilterText}\n        />\n\n        <Tabla columns={columns} table={search} />\n      </div>\n      {modal && (\n        <ModalJuntarTeletrans\n          open={modal}\n          setModal={setModal}\n          closeModal={handleCloseModalIndivudual}\n          actualizarTabla={getPagos}\n        />\n      )}\n    </>\n  );\n};\n\nexport default PagosLayout;\n"],"names":["Search","Input","setFilterText","setModal","style","display","alignItems","justifyContent","width","placeholder","onChange","e","target","value","onClick","open","trabajadores","actualizarTabla","closeModalSubmit","dataToEdit","setDataToEdit","Form","form","Text","Typography","useContext","CrudContext","updateData","createData","cargando","setCargando","dataTrabajadores","map","item","contrato_id","label","nombre","closeModal","useState","seleccionados","setSeleccionados","trabajadoresSeleccionados","setTrabajadoresSeleccionados","useEffect","length","data","filter","includes","incentivosVariosValues","incentivo","setIncentivo","handleData","text","name","setFieldsValue","values","trabajadoresSave","setTrabajadoresSave","teletrans","parseFloat","totalTeletrans","total","forEach","handleSubmit","route","observacion","fecha_pago","dayjs","format","tipo","pago_id","response","notificacion","status","msg","handleClose","MainModal","title","className","onFinish","layout","orientation","direction","showSearch","mode","allowClear","options","disabled","filterOption","input","option","toLowerCase","indexOf","locale","picker","flexDirection","gap","itemLayout","dataSource","renderItem","span","type","min","id","index","findIndex","handleDataTrabajador","required","padding","message","marginTop","htmlType","icon","loading","getData","pagos","setPagos","modal","setOpenModalIndivudual","filterText","search","setSearch","getPagos","filterNull","initialValues","initialTeletrans","initialVolquetes","volquetes","Date","postPagos","info","trabajador_dni","dni","filtered","cargo","columns","pagosLayout","event","i","state","at","Header","ruta","Tabla","table"],"sourceRoot":""}