{"version":3,"file":"static/js/9246.875f5386.chunk.js","mappings":"2SA0KA,EA7J2B,WACzB,OAA4BA,EAAAA,EAAAA,UAAS,CACnCC,aAAc,GACdC,UAAW,GACXC,QAAS,KACT,eAJKC,EAAM,KAAEC,EAAS,KAKxB,GAA0BL,EAAAA,EAAAA,UAAS,IAAG,eAA/BM,EAAK,KAAEC,EAAQ,KACtB,GAA8BP,EAAAA,EAAAA,UAAS,IAAG,eAAnCG,EAAO,KAAEK,EAAU,KAE1B,GAAgCC,EAAAA,EAAAA,YAAWC,EAAAA,GAAnCC,EAAU,EAAVA,WAAYC,EAAO,EAAPA,QAEdC,EAAU,yCAAG,yGACMD,EAAQ,WAAW,KAAD,GAAnCE,EAAQ,SAGZN,EAAWM,EAASC,MACrB,2CACF,kBANe,oCAQhBC,EAAAA,EAAAA,YAAU,WACRH,GACF,GAAG,IAEH,IAAME,EAAO,CACXE,OAAa,OAALX,QAAK,IAALA,OAAK,EAALA,EAAOY,KAAI,SAACC,GAAI,OAAKA,EAAKC,IAAI,IACtCC,SAAU,CACR,CACEC,MAAO,qBACPP,KAAW,OAALT,QAAK,IAALA,OAAK,EAALA,EAAOY,KAAI,SAACC,GAAI,OAAKA,EAAKI,KAAK,IACrCC,gBAAiB,CACf,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,4BAEFC,YAAa,CACX,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,sBAEFC,YAAa,EACbC,aAAc,GACdC,MAAM,KAKNC,EAAa,SAACC,EAAGC,GACrB1B,GAAU,SAAC2B,GACT,OAAO,kBAAKA,GAAM,cAAGD,EAAOD,GAC9B,GACF,EAEMG,EAAe,yCAAG,4FACM,KAAxB7B,EAAOH,cAA4C,KAArBG,EAAOF,UAAgB,gBACpB,MAArB,sBAAsB,EAAD,OAEZS,EAAWP,EAFpB,uBAEmC,KAAD,GAA1CU,EAAQ,SAGZP,EAASO,EAASC,MACnB,2CAEJ,kBAVoB,mCAoBrB,OAJAC,EAAAA,EAAAA,YAAU,WACRiB,GACF,GAAG,CAAC7B,KAGF,iCACE,SAAC8B,EAAA,EAAM,CAACH,KAAM,kBAAgBI,KAAM,UAAWC,KAAM,gBACrD,iBAAKC,UAAU,yBAAwB,WACrC,iBAAKA,UAAU,sBAAqB,WAClC,iBAAKA,UAAU,oBAAmB,WAChC,kBAAOC,QAAQ,GAAE,SAAC,iBAClB,SAAC,IAAM,CACLC,YAAY,2BACZC,MAAO,CACLC,MAAO,QAETC,KAAK,UACLC,MAAOvC,EAAOD,QAAUC,EAAOD,aAASyC,EACxCC,SAAU,SAACf,GAAC,OAAKD,EAAWC,EAAG,UAAU,EACzCgB,YAAU,EACVC,iBAAiB,WACjBC,aAAc,SAACC,EAAOC,GAAM,aACZ,QAAd,EAAO,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQ5B,aAAK,QAAI,IAAI6B,cAAcC,SAASH,EAAME,cAAc,EAEnEE,0BAA0B,EAC1BC,QAASnD,EAAQe,KAAI,SAACC,GACpB,MAAO,CACLwB,MAAOxB,EAAKoC,GACZjC,MAAOH,EAAKqC,OAEhB,UAIJ,4BACE,kBAAOlB,QAAQ,GAAE,SAAC,sBAClB,SAAC,IAAU,CACTE,MAAO,CACLC,MAAO,QAETC,KAAK,eACLH,YAAY,kBACZM,SAAU,SAACf,GAAC,OAAKD,EAAWC,EAAG,eAAe,QAGlD,4BACE,kBAAOQ,QAAQ,GAAE,SAAC,mBAClB,SAAC,IAAU,CACTE,MAAO,CACLC,MAAO,QAETC,KAAK,YACLH,YAAY,eACZM,SAAU,SAACf,GAAC,OAAKD,EAAWC,EAAG,YAAY,WAKjD,gBAAKO,UAAU,oBAAmB,UAChC,SAAC,KAAG,CACFtB,KAAMA,EACNuC,QAAS,CACPG,YAAY,EACZC,qBAAqB,EAErBC,OAAQ,CACNC,QAAS,CACPC,IAAK,EACLC,KAAM,GACNC,MAAO,GACPC,OAAQ,eAS1B,C","sources":["components/logistica/estadisticas/EstadisticasLayout.jsx"],"sourcesContent":["import { DatePicker, Input, Select } from \"antd\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport { useState } from \"react\";\n\nimport { CrudContext } from \"../../../context/CrudContext\";\nimport Header from \"../../header/Header\";\nimport \"../styles/estadisticasLayout.css\";\n\nimport \"chart.js/auto\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst EstadisticasLayout = () => {\n  const [fechas, setFechas] = useState({\n    fecha_inicio: \"\",\n    fecha_fin: \"\",\n    almacen: \"\",\n  });\n  const [datos, setDatos] = useState([]);\n  const [almacen, setAlmacen] = useState([]);\n\n  const { createData, getData } = useContext(CrudContext);\n\n  const getAlmacen = async () => {\n    const response = await getData(\"almacen\");\n\n    if (response) {\n      setAlmacen(response.data);\n    }\n  };\n\n  useEffect(() => {\n    getAlmacen();\n  }, []);\n\n  const data = {\n    labels: datos?.map((item) => item.area),\n    datasets: [\n      {\n        label: \"Gastos por área\",\n        data: datos?.map((item) => item.costo),\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(255, 159, 64, 0.2)\",\n          \"rgba(255, 205, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(153, 102, 255, 0.2)\",\n          \"rgba(201, 203, 207, 0.2)\",\n        ],\n        borderColor: [\n          \"rgb(255, 99, 132)\",\n          \"rgb(255, 159, 64)\",\n          \"rgb(255, 205, 86)\",\n          \"rgb(75, 192, 192)\",\n          \"rgb(54, 162, 235)\",\n          \"rgb(153, 102, 255)\",\n          \"rgb(201, 203, 207)\",\n        ],\n        borderWidth: 1,\n        borderRadius: 15,\n        fill: false,\n      },\n    ],\n  };\n\n  const handleData = (e, text) => {\n    setFechas((values) => {\n      return { ...values, [text]: e };\n    });\n  };\n\n  const getEstadisticas = async () => {\n    if (fechas.fecha_inicio !== \"\" && fechas.fecha_fin !== \"\") {\n      const route = \"entrada/estadistica\";\n\n      const response = await createData(fechas, route);\n\n      if (response) {\n        setDatos(response.data);\n      }\n    }\n  };\n\n  const options = {\n    responsive: true,\n  };\n\n  useEffect(() => {\n    getEstadisticas();\n  }, [fechas]);\n\n  return (\n    <>\n      <Header text={\"Estadísticas\"} user={\"Usuario\"} ruta={\"/logistica\"} />\n      <div className=\"estadisticas-container\">\n        <div className=\"estadisticas-layout\">\n          <div className=\"almacen_container\">\n            <label htmlFor=\"\">Almacén:</label>\n            <Select\n              placeholder=\"Seleccione un almacén\"\n              style={{\n                width: \"100%\",\n              }}\n              name=\"almacen\"\n              value={fechas.almacen ? fechas.almacen: undefined}\n              onChange={(e) => handleData(e, \"almacen\")}\n              showSearch\n              optionFilterProp=\"children\"\n              filterOption={(input, option) =>\n                (option?.label ?? \"\").toLowerCase().includes(input.toLowerCase())\n              }\n              dropdownMatchSelectWidth={false}\n              options={almacen.map((item) => {\n                return {\n                  value: item.id,\n                  label: item.nombre,\n                };\n              })}\n            />\n\n          </div>\n          <div>\n            <label htmlFor=\"\">Fecha de inicio:</label>\n            <DatePicker\n              style={{\n                width: \"100%\",\n              }}\n              name=\"fecha_inicio\"\n              placeholder=\"Fecha de inicio\"\n              onChange={(e) => handleData(e, \"fecha_inicio\")}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"\">Fecha de fin:</label>\n            <DatePicker\n              style={{\n                width: \"100%\",\n              }}\n              name=\"fecha_fin\"\n              placeholder=\"Fecha de fin\"\n              onChange={(e) => handleData(e, \"fecha_fin\")}\n            />\n          </div>\n        </div>\n\n        <div className=\"grafico-container\">\n          <Bar\n            data={data}\n            options={{\n              responsive: true,\n              maintainAspectRatio: false,\n\n              layout: {\n                padding: {\n                  top: 5,\n                  left: 25,\n                  right: 25,\n                  bottom: 15,\n                },\n              },\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EstadisticasLayout;\n"],"names":["useState","fecha_inicio","fecha_fin","almacen","fechas","setFechas","datos","setDatos","setAlmacen","useContext","CrudContext","createData","getData","getAlmacen","response","data","useEffect","labels","map","item","area","datasets","label","costo","backgroundColor","borderColor","borderWidth","borderRadius","fill","handleData","e","text","values","getEstadisticas","Header","user","ruta","className","htmlFor","placeholder","style","width","name","value","undefined","onChange","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","includes","dropdownMatchSelectWidth","options","id","nombre","responsive","maintainAspectRatio","layout","padding","top","left","right","bottom"],"sourceRoot":""}