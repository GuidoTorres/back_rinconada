{"version":3,"file":"static/js/71.30495561.chunk.js","mappings":"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","sources":["components/tabla/TablaTransferencia.jsx","components/logistica/transferencia/BuscadorTransferencia.jsx","components/logistica/transferencia/ModalTransferencia.jsx","components/logistica/transferencia/TransferenciaLayout.jsx","components/modal/MainModal.jsx","components/tabla/Tabla.jsx"],"sourcesContent":["import React from \"react\";\nimport DataTable from \"react-data-table-component\";\nimport \"./tablaTransferencia.css\";\n\nconst TablaTransferencia = ({ columns, table }) => {\n  const paginationComponentOptions = {\n    rowsPerPageText: \"Filas por página\",\n    rangeSeparatorText: \"de\",\n    selectAllRowsItem: true,\n    selectAllRowsItemText: \"Todos\",\n  };\n\n  const expandedComponent = ({ data }) => (\n    <section style={{ padding: \"10px 20px 10px 20px\" }}>\n      <div className=\"row-container\">\n        <table>\n            <tr >\n              <th >Producto</th>\n              <th>Cantidad</th>\n            </tr>\n          {data.transferencia_productos.map((item) => (\n            <tr>\n              <td>{item.producto.nombre}</td>\n              <td>{item.cantidad}</td>\n            </tr>\n          ))}\n        </table>\n      </div>\n    </section>\n  );\n  return (\n    <div className=\"table-container\">\n      <DataTable\n        columns={columns}\n        data={table}\n        pagination\n        fixedHeader\n        striped\n        highlightOnHover\n        expandableRows\n        expandableRowsComponent={expandedComponent}\n        expandableRowDisabled={(row) =>\n          row?.trabajador?.length === 0 ? true : false\n        }\n        paginationComponentOptions={paginationComponentOptions}\n        responsive\n        noHeader={true}\n        noDataComponent={\"No se encontraron resultados.\"}\n      />\n    </div>\n  );\n};\n\nexport default TablaTransferencia;\n","import { Button } from \"antd\";\nimport { AiOutlineForm } from \"react-icons/ai\";\nimport \"../styles/buscadorTransferencia.css\";\nimport React from \"react\";\n\nconst BuscadorTransferencia = ({ abrirModal, realizar }) => {\n  return (\n    <div className=\"buscador-transferencia\">\n      {realizar ? (\n        <>\n          <div>\n            <label htmlFor=\"\">\n              <strong>Transferencias realizadas</strong>\n            </label>\n          </div>\n\n          <Button\n            htmlType=\"submit\"\n            icon={<AiOutlineForm />}\n            onClick={() => abrirModal(true)}\n          >\n            Realizar\n          </Button>\n        </>\n      ) : (\n        <div>\n          <div>\n            <label htmlFor=\"\">\n              <strong>Transferencias solicitadas</strong>\n            </label>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BuscadorTransferencia;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { CrudContext } from \"../../../context/CrudContext\";\nimport { transferenciaLayout } from \"../../../data/dataTable\";\nimport Tabla from \"../../tabla/Tabla\";\nimport { notificacion } from \"../../../helpers/mensajes\";\nimport MainModal from \"../../modal/MainModal\";\nimport { Button, DatePicker, Form, Select } from \"antd\";\nimport \"../styles/modalTransferencia.css\";\nimport { AiOutlineForm } from \"react-icons/ai\";\n\nconst ModalTransferencia = ({ almacen_id, actualizarTabla, id, data }) => {\n  const [form] = Form.useForm();\n\n  const {\n    getData,\n    createData,\n    dataToEdit,\n    setModal,\n    modal,\n    cargando,\n    setCargando,\n  } = useContext(CrudContext);\n\n  const initialValues = {\n    almacen_id: almacen_id,\n    origen: almacen_id,\n    fecha: \"\",\n    producto: \"\",\n    destino: \"\",\n    cantidad: \"\",\n    estado_origen: \"\",\n    estado_destino: \"\",\n  };\n\n  const [almacen, setAlmacen] = useState([]);\n  const [producto, setProducto] = useState([]);\n  const [productoSelect, setProductoSelect] = useState([]);\n  const [productoFinal, setProductoFinal] = useState([]);\n\n  const [almacenDestino, setAlmacenDestino] = useState([]);\n  const [transferencia, setTransferencia] = useState(initialValues);\n  const [newJson, setNewJson] = useState([]);\n  const [idCantidad, setIdCantidad] = useState(\"\");\n\n  const fetchData = async () => {\n    const response = await getData(\"almacen\");\n    const response1 = await getData(\"producto\");\n    setAlmacen(response.data);\n    setProducto(response1.data);\n    setProductoSelect(\n      response1.data.filter((item) => item.almacen_id === almacen_id)\n    );\n  };\n\n  const closeModal = () => {\n    setModal(false);\n  };\n\n  //para filtrar el almacen seleccionado de la lista\n  useEffect(() => {\n    const filterProductoOrigen = producto.filter(\n      (item) => transferencia.origen == item.almacen_id\n    );\n\n    const filterAlmacen = almacen.filter(\n      (item) => parseInt(transferencia.origen) !== item.id\n    );\n    setProductoFinal(filterProductoOrigen);\n    setAlmacenDestino(filterAlmacen);\n  }, [transferencia]);\n\n  const handleChange = (e, text, i) => {\n    if (!text && e.target) {\n      const { name, value } = e.target;\n      form.setFieldsValue({\n        [name]: value,\n      });\n      setTransferencia((values) => {\n        return { ...values, [name]: value };\n      });\n    } else {\n      form.setFieldsValue({\n        [text]: e,\n      });\n      setTransferencia((values) => {\n        return { ...values, [text]: e };\n      });\n    }\n    if (i !== undefined) {\n      setIdCantidad(i);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (transferencia.producto !== \"\" && transferencia.destino !== \"\") {\n      //filtrar el producto seleccionado de la lista\n      let productoOrigen;\n      let productosDestino;\n\n      productoOrigen = producto.filter(\n        (item) => item.id === transferencia.producto\n      );\n      //todos los productos del almacen de destino\n      productosDestino = producto.filter((item) => {\n        let result = productoOrigen.find(\n          (ele) =>\n            ele.codigo_interno !== \"\" &&\n            ele.codigo_interno === item.codigo_interno &&\n            item.almacen_id === transferencia.destino\n        );\n        return result ? result : \"\";\n      });\n\n      if (productosDestino.length > 0) {\n        const result = newJson?.filter((item) => {\n          const prueba = productosDestino.find(\n            (ele) => ele.codigo_interno === item.codigo_interno\n          );\n\n          if (prueba) {\n            return item;\n          } else {\n            return prueba;\n          }\n        });\n\n        if (result.length === 0) {\n          const formatData = productosDestino\n            .map((item) => {\n              return {\n                id: productoOrigen?.at(-1)?.id,\n                fecha: transferencia.fecha,\n                almacen_id: almacen_id,\n                almacen_origen: almacen_id,\n                almacen_destino: transferencia.destino,\n                producto_id: transferencia.producto,\n                producto_origen: transferencia.producto,\n                producto_destino: item.id,\n                nombre: productoOrigen?.at(-1)?.nombre,\n                stock: productoOrigen?.at(-1)?.stock,\n                stock_origen: productoOrigen?.at(-1)?.stock,\n                stock_destino: item.stock,\n                cantidad: \"\",\n              };\n            })\n            .filter((item) => item.stock > 0);\n\n          if (formatData.length > 0) {\n            setNewJson((value) => [...value, formatData.at(-1)]);\n          } else {\n            notificacion(\n              500,\n              \"No se puede agregar el producto, producto sin stock .\"\n            );\n            setTransferencia((value) => ({ ...value, producto: \"\" }));\n          }\n        }\n      } else {\n        // setNewJson([]);\n        notificacion(500, \"Producto no registrado en almacén de destino.\");\n        setTransferencia((value) => ({ ...value, producto: \"\" }));\n      }\n    }\n  }, [transferencia.producto, transferencia.destino]);\n\n  useEffect(() => {\n    if (idCantidad !== \"\" && newJson.length !== 0 && idCantidad !== undefined) {\n      setNewJson((state) =>\n        state.map((item, i) =>\n          i === idCantidad\n            ? {\n                ...item,\n                cantidad: transferencia.cantidad,\n              }\n            : item\n        )\n      );\n    }\n  }, [idCantidad, transferencia.cantidad]);\n\n  const handleSubmit = async (e) => {\n    let route = \"almacen/transferencia\";\n    e.preventDefault();\n\n    const cantidadSuperior = newJson.filter(\n      (item) => parseInt(item.cantidad) > parseInt(item.stock)\n    );\n\n    if (cantidadSuperior.length > 0) {\n      notificacion(\n        500,\n        \"No se puede realizar la transferencia, stock insuficiente en uno de los productos.\"\n      );\n    } else {\n      setCargando(true);\n      const response = await createData(newJson, route);\n      if (response) {\n        notificacion(response.status, response.msg);\n        actualizarTabla();\n        closeModal();\n        setCargando(false);\n      }\n    }\n  };\n\n  const handleDelete = (e) => {\n    setNewJson((current) => current.filter((item) => item.id !== e.id));\n  };\n\n  const columns = transferenciaLayout(\n    handleChange,\n    handleDelete,\n    transferencia.cantidad\n  );\n  return (\n    <MainModal\n      className={\"modal-transferencia\"}\n      title={\"Realizar transferencia\"}\n      open={modal}\n      width={800}\n      closeModal={closeModal}\n    >\n      <Form\n        form={form}\n        className=\"modal-body\"\n        onFinish={handleSubmit}\n        layout=\"horizontal\"\n      >\n        <Form.Item name=\"fecha\">\n          <DatePicker\n            defaultValue={transferencia.fecha}\n            style={{\n              width: \"100%\",\n            }}\n            format={\"YYYY-MM-DD\"}\n            name=\"fecha\"\n            placeholder=\"Fecha\"\n            onChange={(e) => handleChange(e, \"fecha\")}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"destino\"\n          rules={[\n            {\n              required: true,\n              message: \"Campo obligatorio!\",\n            },\n          ]}\n        >\n          <Select\n            showSearch\n            placeholder=\"Almacén destino\"\n            name=\"destino\"\n            value={transferencia.destino}\n            optionFilterProp=\"children\"\n            onChange={(e) => handleChange(e, \"destino\")}\n            filterOption={(input, option) =>\n              (option?.label ?? \"\").toLowerCase().includes(input.toLowerCase())\n            }\n            options={almacenDestino.map((item) => {\n              return {\n                label: item.nombre,\n                value: item.id,\n              };\n            })}\n          />\n        </Form.Item>\n\n        <Form.Item name=\"producto\">\n          <Select\n            showSearch\n            placeholder=\"Seleccione un producto\"\n            name=\"producto\"\n            value={transferencia.producto}\n            optionFilterProp=\"children\"\n            onChange={(e) => handleChange(e, \"producto\")}\n            filterOption={(input, option) =>\n              (option?.label ?? \"\").toLowerCase().includes(input.toLowerCase())\n            }\n            options={productoSelect?.map((item) => {\n              return {\n                label: item.nombre,\n                value: item.id,\n              };\n            })}\n          />\n        </Form.Item>\n      </Form>\n\n      <div className=\"tabla-container\">\n        <Tabla columns={columns} table={newJson} />\n      </div>\n\n      {newJson.length !== 0 ? (\n        <div className=\"button-transferir\">\n          <Button\n            onClick={handleSubmit}\n            icon={<AiOutlineForm />}\n            loading={cargando ? true : false}\n          >\n            Transferir\n          </Button>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </MainModal>\n  );\n};\n\nexport default ModalTransferencia;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport { CrudContext } from \"../../../context/CrudContext\";\nimport {\n  transferenciaRealizada,\n  transferenciaRecibida,\n} from \"../../../data/dataTable\";\nimport { notificacion } from \"../../../helpers/mensajes\";\nimport Header from \"../../header/Header\";\nimport TablaTransferencia from \"../../tabla/TablaTransferencia\";\nimport BuscadorTransferencia from \"./BuscadorTransferencia\";\nimport ModalTransferencia from \"./ModalTransferencia\";\nimport { Input, Button, Radio, Select, Empty } from \"antd\";\nimport \"../styles/transferenciaLayout.css\";\nimport Cargando from \"../../cargando/Cargando\";\nconst { Search } = Input;\n\nconst TransferenciaLayout = () => {\n  const {\n    getData,\n    setData,\n    data,\n    setModal,\n    modal,\n    updateData,\n    createData,\n    deleteData,\n    loading,\n  } = useContext(CrudContext);\n  const [almacen, setAlmacen] = useState([]);\n  const [almacen_id, setAlmacen_id] = useState(\"\");\n  const [recibida, setRecibida] = useState([]);\n\n  const getAlmacen = async () => {\n    const route1 = \"almacen\";\n    const response1 = await getData(route1);\n    setAlmacen(response1.data);\n  };\n\n  const getTransferencia = async () => {\n    const route = `transferencia/realizada/${almacen_id}`;\n    const route2 = `transferencia/recibida/${almacen_id}`;\n    const response = await getData(route);\n    const response2 = await getData(route2);\n    setData(response.data);\n    setRecibida(response2.data);\n  };\n  useEffect(() => {\n    getAlmacen();\n  }, []);\n  useEffect(() => {\n    if (almacen_id !== \"\") {\n      getTransferencia();\n    }\n  }, [almacen_id]);\n\n  const updateEstado = async (a, e) => {\n    const route = \"transferencia\";\n    const response = await updateData(e, e.id, route);\n    if (response.status === 200) {\n      notificacion(response.status, response.msg);\n      getTransferencia();\n    }\n  };\n\n  const handleDelete = async (e) => {\n    const route = `transferencia`;\n    const response = await deleteData(route, e.id);\n    if (response.status === 200) {\n      notificacion(response.status, response.msg);\n      getTransferencia();\n    }\n  };\n\n  const retornarTransferencia = async (e) => {\n    const route = `transferencia/retornar/${e.id}`;\n    const retornar = {\n      transferencia_id: e.id,\n      productos: e.transferencia_productos.map((item) => {\n        return {\n          id: item.producto.id,\n          cantidad: item.cantidad,\n          stock: item.producto.stock,\n        };\n      }),\n    };\n    const response = await createData(retornar, route);\n    if (response) {\n      notificacion(response.status, response.msg);\n      getTransferencia();\n    }\n  };\n\n  const columns = transferenciaRealizada(retornarTransferencia, handleDelete);\n  const columns2 = transferenciaRecibida(updateEstado);\n  return (\n    <>\n      <Header text={\"Transferencias\"} user={\"Usuario\"} ruta={\"/logistica\"} />\n\n      <div className=\"transferencia-layout\">\n        <div>\n          <div className=\"almacen\">\n            <label htmlFor=\"\">\n              <strong>Seleccione un almacén:</strong>{\" \"}\n            </label>\n            <Select\n              placeholder=\"Almacén\"\n              name=\"almacen_id\"\n              onChange={(e) => setAlmacen_id(e)}\n              style={{ width: \"200px\" }}\n              options={almacen.map((item, i) => {\n                return {\n                  label: item.nombre,\n                  value: item.id,\n                };\n              })}\n            ></Select>\n          </div>\n\n          {almacen_id !== \"\" ? (\n            <div className=\"margenes\">\n              <BuscadorTransferencia abrirModal={setModal} realizar={true} />\n              {data.length > 0 ? (\n                <TablaTransferencia columns={columns} table={data} />\n              ) : (\n                <div className=\"noData\">\n                  <Empty\n                    image={Empty.PRESENTED_IMAGE_SIMPLE}\n                    description={<span>No hay registros para mostrar.</span>}\n                  />\n                </div>\n              )}\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n\n        {almacen_id !== \"\" ? (\n          <div>\n            <br />\n            <br />\n            <br />\n            <br />\n            <div className=\"margenes\">\n              <BuscadorTransferencia abrirModal={setModal} realizar={false} />\n              {recibida.length > 0 ? (\n                <TablaTransferencia columns={columns2} table={recibida} />\n              ) : (\n                <div className=\"noData\">\n                  <Empty\n                    image={Empty.PRESENTED_IMAGE_SIMPLE}\n                    description={<span>No hay registros para mostrar.</span>}\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n\n      {modal && (\n        <ModalTransferencia\n          almacen_id={almacen_id}\n          actualizarTabla={getTransferencia}\n        />\n      )}\n    </>\n  );\n};\n\nexport default TransferenciaLayout;\n","import React from \"react\";\nimport { Modal } from \"antd\";\n\nconst MainModal = ({ className, title, open, width, closeModal, children }) => {\n  return (\n    <Modal\n      destroyOnClose={true}\n      className={className}\n      title={title}\n      open={open}\n      centered\n      onCancel={closeModal}\n      footer={null}\n      width={width}\n    >\n      {children}\n    </Modal>\n  );\n};\n\nexport default MainModal;\n","import React from \"react\";\nimport DataTable from \"react-data-table-component\";\nimport { Empty } from \"antd\";\n\nimport \"./tabla.css\";\nimport Cargando from \"../cargando/Cargando\";\n\nconst Tabla = ({ columns, table, filas }) => {\n  const [pending, setPending] = React.useState(true);\n\tconst [rows, setRows] = React.useState([]);\n\tReact.useEffect(() => {\n\t\tconst timeout = setTimeout(() => {\n\t\t\tsetRows(table);\n\t\t\tsetPending(false);\n\t\t}, 2000);\n\t\treturn () => clearTimeout(timeout);\n\t}, []);\n  const paginationComponentOptions = {\n    rowsPerPageText: \"Filas por página\",\n    rangeSeparatorText: \"de\",\n    selectAllRowsItem: false,\n    selectAllRowsItemText: \"Todos\",\n    preserveSelectedOnPageChange: true,\n  };\n\n  const filasArray = filas\n    ? [filas, filas * 2, filas * 3, filas * 4, filas * 5]\n    : [10, 20, 30, 40, 50];\n\n  return (\n    <div className=\"table-container\">\n      <DataTable\n        columns={columns}\n        data={table}\n        pagination\n        striped\n        highlightOnHover\n        responsive\n        paginationComponentOptions={paginationComponentOptions}\n        paginationPerPage={filas || 10}\n        paginationRowsPerPageOptions={filasArray}\n        noDataComponent={\n          <Empty\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n            description={<span>No hay registros para mostrar.</span>}\n          />\n        }\n      />\n    </div>\n  );\n};\n\nexport default Tabla;\n"],"names":["columns","table","className","data","pagination","fixedHeader","striped","highlightOnHover","expandableRows","expandableRowsComponent","style","padding","transferencia_productos","map","item","producto","nombre","cantidad","expandableRowDisabled","row","trabajador","length","paginationComponentOptions","rowsPerPageText","rangeSeparatorText","selectAllRowsItem","selectAllRowsItemText","responsive","noHeader","noDataComponent","abrirModal","realizar","htmlFor","htmlType","icon","onClick","almacen_id","actualizarTabla","id","Form","form","useContext","CrudContext","getData","createData","setModal","dataToEdit","modal","cargando","setCargando","initialValues","origen","fecha","destino","estado_origen","estado_destino","useState","almacen","setAlmacen","setProducto","productoSelect","setProductoSelect","setProductoFinal","almacenDestino","setAlmacenDestino","transferencia","setTransferencia","newJson","setNewJson","idCantidad","setIdCantidad","fetchData","response","response1","filter","closeModal","useEffect","filterProductoOrigen","filterAlmacen","parseInt","handleChange","e","text","i","target","name","value","setFieldsValue","values","undefined","productoOrigen","productosDestino","result","find","ele","codigo_interno","prueba","formatData","at","almacen_origen","almacen_destino","producto_id","producto_origen","producto_destino","stock","stock_origen","stock_destino","notificacion","state","handleSubmit","route","preventDefault","status","msg","transferenciaLayout","current","MainModal","title","open","width","onFinish","layout","defaultValue","format","placeholder","onChange","rules","required","message","showSearch","optionFilterProp","filterOption","input","option","label","toLowerCase","includes","options","Tabla","loading","Input","setData","updateData","deleteData","setAlmacen_id","recibida","setRecibida","getAlmacen","getTransferencia","route2","response2","updateEstado","a","handleDelete","retornarTransferencia","retornar","transferencia_id","productos","transferenciaRealizada","columns2","transferenciaRecibida","Header","user","ruta","image","Empty","description","children","destroyOnClose","centered","onCancel","footer","filas","React","setPending","setRows","timeout","setTimeout","clearTimeout","filasArray","preserveSelectedOnPageChange","paginationPerPage","paginationRowsPerPageOptions"],"sourceRoot":""}