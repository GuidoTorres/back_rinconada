{"version":3,"file":"static/js/202.5365e38e.chunk.js","mappings":"yRAcQA,EAAWC,EAAAA,EAAAA,OA8JnB,EA5JiB,SAAH,GAaP,IAZLC,EAAU,EAAVA,WACAC,EAAS,EAATA,UAEAC,GADK,EAALC,MACQ,EAARD,UACAE,EAAM,EAANA,OACAC,EAAU,EAAVA,WACAC,EAAQ,EAARA,SACAC,EAAK,EAALA,MACAC,EAAU,EAAVA,WACAC,EAAK,EAALA,MACAC,EAAa,EAAbA,cACAC,EAAK,EAALA,MAEQC,GAAyBC,EAAAA,EAAAA,YAAWC,EAAAA,GAApCF,qBACFG,GAAeC,EAAAA,EAAAA,QAAO,MAatBC,EAAS,yCAAG,WAAOC,GAAC,gFAGQ,OAF5BC,EAAW,IAAIC,UACVC,OAAO,SAAUH,EAAEI,OAAOC,MAAM,IACzCJ,EAASE,OAAO,QAASV,GAAO,SACZa,MAAM,GAAD,OACpBC,kCAA0B,qBAC7B,CACEC,OAAQ,OACRC,KAAMR,IAER,KAAD,EANU,OAALS,EAAK,gBAOYA,EAAMC,OAAO,KAAD,GAA7BC,EAAQ,WAEZC,EAAAA,EAAAA,GAAaD,EAASE,OAAQF,EAASG,KACvC5B,IACAO,GAAqB,GACrBG,EAAamB,QAAQC,MAAQ,MAC9B,4CACF,gBAlBc,sCAwDf,OACE,iBACEC,UAAU,qBACVC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,MAAO,QACP,WAEF,kBACEC,KAAK,OACLC,IAAK3B,EACL4B,SAAU1B,EACVoB,MAAO,CAAEC,QAAS,UAEnBhC,GACC,SAACR,EAAM,CACL8C,YAAY,wBACZD,SAAU,SAACzB,GAAC,OAAKR,EAAcQ,EAAEI,OAAOa,MAAM,EAC9CE,MAAO,CACLG,MAAO,QAIX,iBAAKH,MAAO,CAAEG,MAAO,QAAS,WACb,IAAdvC,GACC,SAAC,KAAM,CAAC4C,QA7FE,WAClB7C,GAAW,EACb,EA2FuC,SAAC,cAE9B,IAEY,IAAbE,GACI,OAALK,QAAK,IAALA,GAAAA,EAAOuC,eACF,OAALvC,QAAK,IAALA,GAAAA,EAAOwC,YACF,OAALxC,QAAK,IAALA,GAAAA,EAAOyC,MACL,SAAC,KAAM,CAACH,QAtEQ,SAAC3B,GAAO,IAAD,IACzB+B,EAAoC,QAA9B,EAAG1C,EAAM2C,6BAAqB,aAA3B,EAA6BC,KAAI,SAACC,GAAS,IAAD,EACvD,OAAO,UACD,OAAHA,QAAG,IAAHA,GAAgB,QAAb,EAAHA,EAAKC,mBAAW,WAAb,EAAH,EAAkB1C,MACE,YAAnByC,EAAIE,WACA,IACmB,YAAnBF,EAAIE,WACJ,IACmB,UAAnBF,EAAIE,WACJ,IACmB,cAAnBF,EAAIE,WACJ,KACmB,aAAnBF,EAAIE,WACJ,IACA,IAEV,IAEMC,EAASC,OAAOC,OAAM,MAAbD,OAAM,CAAQ,CAAC,GAAC,eAAKP,KAC9BS,EAAe,OAALnD,QAAK,IAALA,GAA4B,QAAvB,EAALA,EAAO2C,6BAAqB,WAAvB,EAAL,EAA8BS,MAAM,EAAG,GAAGR,KAAI,SAACC,EAAKQ,GAAO,IAAD,IACxE,OAAO,QACLC,IAAKD,EAAI,EACTE,OAAa,OAALvD,QAAK,IAALA,OAAK,EAALA,EAAOwD,OACfC,IAAU,OAALzD,QAAK,IAALA,OAAK,EAALA,EAAO0D,IACZC,QAAc,OAAL3D,QAAK,IAALA,OAAK,EAALA,EAAO4D,SAChBC,MAAY,OAAL7D,QAAK,IAALA,GAAgB,QAAX,EAALA,EAAO8D,iBAAS,WAAX,EAAL,EAAkBC,OACzBC,UAAW,OAALhE,QAAK,IAALA,GAAgB,QAAX,EAALA,EAAO8D,iBAAS,WAAX,EAAL,EAAkBG,MACrBjB,EAEP,KAEAkB,EAAAA,EAAAA,GAAqBf,EAAS,gBAAiB,SAGjD,EAoC6C,SAAC,cAEpC,IAEc,IAAflD,GACC,SAAC,KAAM,CAACqC,QAvGO,WACvBpC,GAAM,EACR,EAqG4C,SAAC,mBAEnC,IAEU,IAAXL,GACC,iBACEiC,MAAO,CACLG,MAAO,OACPF,QAAS,OACToC,eAAgB,gBAChBnC,WAAY,UACZ,WAEF,SAACzC,EAAM,CACL8C,YAAY,wBACZD,SAAU,SAACzB,GAAC,OAAKR,EAAcQ,EAAEI,OAAOa,MAAM,EAC9CE,MAAO,CACLG,MAAO,QAGX,SAAC,KAAM,CAACH,MAAO,CAAEG,MAAO,SAAWK,QAvHzB,WACpB9B,EAAamB,QAAQyC,OACvB,EAqHsE,SAAC,cAK7D,QAMZ,C,gOCjGA,EArEgC,SAAH,GAAiC,IAA3BC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAU,EAAHC,IA4CjD,OACE,gBAAK1C,UAAU,kBAAiB,UAC9B,SAAC,KAAS,CACRwC,QAASA,EACTG,KAAMF,EACNG,YAAU,EACVC,aAAW,EACXC,SAAO,EACPC,kBAAgB,EAChBC,gBAAc,EACdC,wBApDsB,SAAH,GAAU,EAAJN,KAAI,OAC7B,uBAgCA,EAoBAO,2BAjBiC,CACjCC,gBAAiB,sBACjBC,mBAAoB,KACpBC,mBAAmB,EACnBC,sBAAuB,SAcvBC,YAAU,EACVC,UAAU,EACVC,iBACE,SAAC,IAAK,CACJC,MAAOC,EAAAA,EAAAA,uBACPC,aAAa,0BAAM,wCAM/B,ECXA,G,SAnDiC,WAC/B,OAAgCC,EAAAA,EAAAA,UAAS,IAAG,eAArCC,EAAQ,KAAEC,EAAW,KAC5B,GAAgCtF,EAAAA,EAAAA,YAAWuF,EAAAA,GAAnCC,EAAO,EAAPA,QAASC,EAAU,EAAVA,WAEXC,EAAW,yCAAG,yGACKF,EAAQ,uBAAuB,KAAD,GAA/CvE,EAAQ,SAEZqE,EAAYrE,EAASiD,MACtB,2CACF,kBALgB,oCAOjByB,EAAAA,EAAAA,YAAU,WACRD,GACF,GAAG,IAEH,IAAME,EAAgB,yCAAG,WAAOvF,EAAG6D,GAAI,oFAcyB,MAbhD,sBAGV7D,EAAEI,OAAOoF,UACXC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,WAGtC,eACD7F,EAAEI,OAAO0F,KAAOL,GAAS,OAAI,uBACjB5B,EAAKkC,cAAW,uBAChBlC,EAAKmC,cAAW,iBACtBC,IAAM,IAAIC,MAAQC,OAAO,eAJlCC,EAI+C,EAE3CC,EAAexC,EAAKyC,cAAgBzC,EAAKyC,cAAgB,EAAE,EAAD,OAEvClB,EAAWgB,EAAMC,EAf1B,uBAe+C,KAAD,GAAtDzF,EAAQ,WAEZC,EAAAA,EAAAA,GAAaD,EAASE,OAAQF,EAASG,KACvCsE,KACD,2CACF,gBArBqB,wCAuBhB3B,GAAU6C,EAAAA,EAAAA,IAAmBhB,GACnC,OACE,iCACE,SAACiB,EAAA,EAAM,CAACC,KAAM,eAAgBC,KAAM,UAAWC,KAAM,gBACrD,gBAAKzF,UAAU,WAAU,UAGvB,SAAC,EAAuB,CAACwC,QAASA,EAASC,MAAOqB,QAI1D,E,wGCzDa4B,EAAsB,SAACC,EAAYC,EAAWC,GACzD,IAAMC,EAAKC,EAAAA,GAAAA,WACLC,EAAKD,EAAAA,GAAAA,cAAoBJ,GAC/BI,EAAAA,GAAAA,kBAAwBD,EAAIE,EAAIJ,IAChCK,EAAAA,EAAAA,IAAcH,EAAG,GAAD,OAAKD,EAAQ,SAC/B,EAEaxD,EAAuB,SAACsD,EAAYC,EAAWC,GAC1D,IAAMC,EAAKC,EAAAA,GAAAA,WACLG,EAAU,CACd,gBACA,WACA,WACA,WACA,WACA,YAIIC,EAAO,CAACD,EAAS9E,OAAO+E,KAAKR,EAAW,KAMxCS,EAHI,UAAOD,GAAK,OAAIR,EAAW5E,KAAI,SAACsF,GAAG,OAAKjF,OAAOkF,OAAOD,EAAI,MAGlDtF,KAAI,SAACwF,GAAG,OACxBA,EAAIC,QAAO,SAACC,EAAKC,EAAKlF,GAEpB,OADAiF,EAAIP,EAAQ1E,IAAMkF,EACXD,CACT,GAAG,CAAC,EAAE,IAGFT,EAAKD,EAAAA,GAAAA,cAAoBK,GAG/BJ,EAAG,SAAWE,EAAQnF,KAAI,iBAAO,CAC/BX,MAAO,GACPuG,OAAQ,GACRC,UAAW,SACZ,IAGDZ,EAAG,WAAa,CAAC,CAAEa,EAAG,CAAEC,EAAG,EAAGC,EAAG,GAAKjI,EAAG,CAAEgI,EAAG,EAAGC,EAAG,KACpDf,EAAO,GAAEa,EAAI,CAAEG,KAAM,CAAEC,MAAM,IAC7BjB,EAAO,GAAEa,EAAI,CAAEG,KAAM,CAAEC,MAAM,IAC7BjB,EAAO,GAAEa,EAAI,CAAEG,KAAM,CAAEC,MAAM,IAC7BjB,EAAO,GAAEa,EAAI,CAAEG,KAAM,CAAEC,MAAM,IAC7BjB,EAAO,GAAEa,EAAI,CAAEG,KAAM,CAAEC,MAAM,IAC7BjB,EAAO,GAAEa,EAAI,CAAEG,KAAM,CAAEC,MAAM,IAE7BlB,EAAAA,GAAAA,kBAAwBD,EAAIE,EAAIJ,IAChCK,EAAAA,EAAAA,IAAcH,EAAG,GAAD,OAAKD,EAAQ,SAC/B,C","sources":["components/planillas/Buscador.jsx","components/tabla/TablaAprobacionPlanilla.jsx","components/planillas/aprobaciones/AprobacionPlanillaLayout.jsx","helpers/tablaExcel.jsx"],"sourcesContent":["import React from \"react\";\nimport { useContext, useRef } from \"react\";\nimport { PlanillaContext } from \"../../context/PlanillaContext\";\nimport { Input, Button } from \"antd\";\nimport { notificacion } from \"../../helpers/mensajes\";\nimport \"./style/buscador.css\";\nimport {\n  handleDownloadExcel,\n  handleDownloadExcel1,\n} from \"../../helpers/tablaExcel\";\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\n\nimport Item from \"antd/es/list/Item\";\nimport { useState } from \"react\";\nconst { Search } = Input;\n\nconst Buscador = ({\n  abrirModal,\n  registrar,\n  crear,\n  exportar,\n  cargar,\n  actualizar,\n  buscador,\n  data1,\n  validacion,\n  modal,\n  setFilterText,\n  fecha,\n}) => {\n  const { setControlAsistencia } = useContext(PlanillaContext);\n  const inputFileRef = useRef(null);\n\n  const handleModal = () => {\n    abrirModal(true);\n  };\n  const handleValidacion = () => {\n    modal(true);\n  };\n\n  const changeHandler = () => {\n    inputFileRef.current.click();\n  };\n\n  const excelFile = async (e) => {\n    let formData = new FormData();\n    formData.append(\"myFile\", e.target.files[0]);\n    formData.append(\"fecha\", fecha);\n    const excel = await fetch(\n      `${process.env.REACT_APP_BASE}/asistencia/excel`,\n      {\n        method: \"post\",\n        body: formData,\n      }\n    );\n    const response = await excel.json();\n    if (response) {\n      notificacion(response.status, response.msg);\n      actualizar();\n      setControlAsistencia(false);\n      inputFileRef.current.value = null;\n    }\n  };\n\n  const excelFileDownload = (e) => {\n    const result = data1.trabajador_asistencia?.map((dat) => {\n      return {\n        [dat?.asistencium?.fecha]:\n          dat.asistencia === \"Permiso\"\n            ? \"P\"\n            : dat.asistencia === \"Asistio\"\n            ? \"X\"\n            : dat.asistencia === \"Falto\"\n            ? \"F\"\n            : dat.asistencia === \"Dia libre\"\n            ? \"DL\"\n            : dat.asistencia === \"Comision\"\n            ? \"C\"\n            : \"F\",\n      };\n    });\n\n    const newObj = Object.assign({}, ...result);\n    const result2 = data1?.trabajador_asistencia?.slice(0, 1).map((dat, i) => {\n      return {\n        Nro: i + 1,\n        Nombre: data1?.nombre,\n        Dni: data1?.dni,\n        Celular: data1?.telefono,\n        Cargo: data1?.contratos?.puesto,\n        Área: data1?.contratos?.area,\n        ...newObj,\n      };\n    });\n\n    handleDownloadExcel1(result2, \"Hoja de tareo\", \"prueba\");\n    // setShowDownloadLink(true);\n    // setResult2(result2);\n  };\n\n  return (\n    <div\n      className=\"buscador-container\"\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        width: \"100%\",\n      }}\n    >\n      <input\n        type=\"file\"\n        ref={inputFileRef}\n        onChange={excelFile}\n        style={{ display: \"none\" }}\n      />\n      {buscador ? (\n        <Search\n          placeholder=\"Ingresa una nombre...\"\n          onChange={(e) => setFilterText(e.target.value)}\n          style={{\n            width: 300,\n          }}\n        />\n      ) : (\n        <div style={{ width: \"100%\" }}>\n          {registrar !== false ? (\n            <Button onClick={handleModal}>Registrar</Button>\n          ) : (\n            \"\"\n          )}\n          {exportar !== false &&\n          data1?.firma_gerente &&\n          data1?.firma_jefe &&\n          data1?.foto ? (\n            <Button onClick={excelFileDownload}>Descargar</Button>\n          ) : (\n            \"\"\n          )}\n          {validacion !== false ? (\n            <Button onClick={handleValidacion}>Validación </Button>\n          ) : (\n            \"\"\n          )}\n          {cargar !== false ? (\n            <div\n              style={{\n                width: \"100%\",\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n              }}\n            >\n              <Search\n                placeholder=\"Ingresa una nombre...\"\n                onChange={(e) => setFilterText(e.target.value)}\n                style={{\n                  width: 300,\n                }}\n              />\n              <Button style={{ width: \"100px\" }} onClick={changeHandler}>\n                Cargar\n              </Button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Buscador;\n","import { Empty } from 'antd'\nimport React from 'react'\nimport DataTable from 'react-data-table-component'\n\nconst TablaAprobacionPlanilla = ({ columns, table, set }) => {\n    \n    const expandedComponent = ({ data }) => (\n        <></>\n        // <div style={{ padding: \"10px 20px 10px 60px\" }}>\n        //   <div style={{ marginTop: \"5px\" }}>\n        //     <label htmlFor=\"\">\n        //       <strong>Solicitante:</strong> {data.solicitante}\n        //     </label>\n        //     <br />\n        //     <label htmlFor=\"\">\n        //       <strong>Teléfono:</strong> {data.celular}\n        //     </label>\n    \n        //     <table style={{ marginTop: \"20px\" }}>\n        //       <tr>\n        //         <td style={{ width: \"140px\", textAlign: \"center\" }}>\n        //           <strong>Fecha de pedido</strong>\n        //         </td>\n        //         <td style={{ width: \"240px\", textAlign: \"center\" }}>\n        //           <strong>Producto</strong>\n        //         </td>\n        //         <td style={{ width: \"180px\", textAlign: \"center\" }}>\n        //           <strong>Cantidad</strong>\n        //         </td>\n        //       </tr>\n        //       {data.requerimiento_productos.map((item, i) => (\n        //         <tr key={i}>\n        //           <td style={{ textAlign: \"center\" }}>{data.fecha_pedido}</td>\n        //           <td style={{ textAlign: \"center\" }}>{item.producto.nombre}</td>\n        //           <td style={{ textAlign: \"center\" }}>{item.cantidad}</td>\n        //         </tr>\n        //       ))}\n        //     </table>\n        //   </div>\n        // </div>\n      );\n    \n      const paginationComponentOptions = {\n        rowsPerPageText: \"Filas por página\",\n        rangeSeparatorText: \"de\",\n        selectAllRowsItem: false,\n        selectAllRowsItemText: \"Todos\",\n      };\n  return (\n    <div className=\"table-container\">\n      <DataTable\n        columns={columns}\n        data={table}\n        pagination\n        fixedHeader\n        striped\n        highlightOnHover\n        expandableRows\n        expandableRowsComponent={expandedComponent}\n        paginationComponentOptions={paginationComponentOptions}\n        responsive\n        noHeader={true}\n        noDataComponent={\n          <Empty\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n            description={<span>No hay registros para mostrar.</span>}\n          />\n        }\n      />\n    </div>\n  )\n}\n\nexport default TablaAprobacionPlanilla","import dayjs from \"dayjs\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { CrudContext } from \"../../../context/CrudContext\";\nimport { aprobacionPlanilla } from \"../../../data/dataTable\";\nimport { notificacion } from \"../../../helpers/mensajes\";\nimport Header from \"../../header/Header\";\nimport TablaAprobacionPlanilla from \"../../tabla/TablaAprobacionPlanilla\";\nimport Buscador from \"../Buscador\";\n\nconst AprobacionPlanillaLayout = () => {\n  const [planilla, setPlanilla] = useState([]);\n  const { getData, updateData } = useContext(CrudContext);\n\n  const getPlanilla = async () => {\n    const response = await getData(\"planilla/aprobacion\");\n    if (response) {\n      setPlanilla(response.data);\n    }\n  };\n\n  useEffect(() => {\n    getPlanilla();\n  }, []);\n\n  const updateAprobacion = async (e, data) => {\n    const route = \"planilla/asistencia\";\n    let firma;\n    let info;\n    if (e.target.checked) {\n      firma = JSON.parse(localStorage.getItem(\"firma\"));\n    }\n\n    info = {\n      [e.target.name]: firma || null,\n      contrato_id: data.contrato_id,\n      subarray_id: data.subArray_id,\n      fecha: dayjs(new Date()).format(\"DD-MM-YYYY\"),\n    };\n    let aprobacionId = data.aprobacion_id ? data.aprobacion_id : 0;\n\n    const response = await updateData(info, aprobacionId, route);\n    if (response) {\n      notificacion(response.status, response.msg);\n      getPlanilla();\n    }\n  };\n\n  const columns = aprobacionPlanilla(updateAprobacion);\n  return (\n    <>\n      <Header text={\"Aprobaciones\"} user={\"Usuario\"} ruta={\"/planillas\"} />\n      <div className=\"margenes\">\n        {/* <Buscador /> */}\n\n        <TablaAprobacionPlanilla columns={columns} table={planilla} />\n      </div>\n    </>\n  );\n};\n\nexport default AprobacionPlanillaLayout;\n","import { utils, writeFileXLSX, writeFile } from \"xlsx\";\nexport const handleDownloadExcel = (dataSource, sheetName, fileName) => {\n  const wb = utils.book_new();\n  const ws = utils.json_to_sheet(dataSource);\n  utils.book_append_sheet(wb, ws, sheetName);\n  writeFileXLSX(wb, `${fileName}.xlsx`);\n};\n\nexport const handleDownloadExcel1 = (dataSource, sheetName, fileName) => {\n  const wb = utils.book_new();\n  const headers = [\n    \"Hoja de Tareo\",\n    \"Header 2\",\n    \"Header 3\",\n    \"Header 4\",\n    \"Header 5\",\n    \"Header 6\",\n  ];\n\n  // Crear un array con la cabecera y las llaves de los objetos\n  const keys = [headers, Object.keys(dataSource[0])];\n\n  // Crear un array con la cabecera, las llaves y los valores de los objetos\n  const data = [...keys, ...dataSource.map((obj) => Object.values(obj))];\n\n  // Transformar el array de arrays en un array de objetos\n  const rows = data.map((arr) =>\n    arr.reduce((acc, val, i) => {\n      acc[headers[i]] = val;\n      return acc;\n    }, {})\n  );\n\n  const ws = utils.json_to_sheet(rows);\n\n  // Establecer el ancho de las columnas de la cabecera\n  ws[\"!cols\"] = headers.map(() => ({\n    width: 20,\n    height: 40,\n    textAlign: \"center\",\n  }));\n\n  // Establecer el estilo de la cabecera\n  ws[\"!merges\"] = [{ s: { r: 0, c: 0 }, e: { r: 0, c: 1 } }];\n  ws[\"A1\"].s = { font: { bold: true } };\n  ws[\"B1\"].s = { font: { bold: true } };\n  ws[\"C1\"].s = { font: { bold: true } };\n  ws[\"D1\"].s = { font: { bold: true } };\n  ws[\"E1\"].s = { font: { bold: true } };\n  ws[\"F1\"].s = { font: { bold: true } };\n\n  utils.book_append_sheet(wb, ws, sheetName);\n  writeFileXLSX(wb, `${fileName}.xlsx`);\n};\n"],"names":["Search","Input","abrirModal","registrar","exportar","crear","cargar","actualizar","buscador","data1","validacion","modal","setFilterText","fecha","setControlAsistencia","useContext","PlanillaContext","inputFileRef","useRef","excelFile","e","formData","FormData","append","target","files","fetch","process","method","body","excel","json","response","notificacion","status","msg","current","value","className","style","display","alignItems","width","type","ref","onChange","placeholder","onClick","firma_gerente","firma_jefe","foto","result","trabajador_asistencia","map","dat","asistencium","asistencia","newObj","Object","assign","result2","slice","i","Nro","Nombre","nombre","Dni","dni","Celular","telefono","Cargo","contratos","puesto","Área","area","handleDownloadExcel1","justifyContent","click","columns","table","set","data","pagination","fixedHeader","striped","highlightOnHover","expandableRows","expandableRowsComponent","paginationComponentOptions","rowsPerPageText","rangeSeparatorText","selectAllRowsItem","selectAllRowsItemText","responsive","noHeader","noDataComponent","image","Empty","description","useState","planilla","setPlanilla","CrudContext","getData","updateData","getPlanilla","useEffect","updateAprobacion","checked","firma","JSON","parse","localStorage","getItem","name","contrato_id","subArray_id","dayjs","Date","format","info","aprobacionId","aprobacion_id","aprobacionPlanilla","Header","text","user","ruta","handleDownloadExcel","dataSource","sheetName","fileName","wb","utils","ws","writeFileXLSX","headers","keys","rows","obj","values","arr","reduce","acc","val","height","textAlign","s","r","c","font","bold"],"sourceRoot":""}