{"version":3,"file":"static/js/344.b967e581.chunk.js","mappings":"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","sources":["components/planillas/pagos/ModalJuntarTeletrans.jsx","components/planillas/pagos/ModalPagosIndividual.jsx","components/planillas/pagos/PagosLayout.jsx"],"sourcesContent":["import {\n  Alert,\n  Button,\n  Card,\n  Col,\n  ConfigProvider,\n  DatePicker,\n  Divider,\n  Form,\n  Input,\n  List,\n  Row,\n  Select,\n  Space,\n  Typography,\n} from \"antd\";\nimport dayjs from \"dayjs\";\nimport { useContext, useEffect, useState } from \"react\";\nimport locale from \"antd/es/date-picker/locale/es_ES\";\nimport { incentivosVariosValues } from \"../../../data/initalValues\";\nimport MainModal from \"../../modal/MainModal\";\nimport { AiOutlineForm } from \"react-icons/ai\";\nimport { CrudContext } from \"../../../context/CrudContext\";\nimport { notificacion } from \"../../../helpers/mensajes\";\n\nfunction ModalJuntarTeletrans({\n  open,\n  closeModal,\n  trabajadores,\n  actualizarTabla,\n  closeModalSubmit = () => {},\n  dataToEdit,\n  setDataToEdit = () => {},\n}) {\n  const [form] = Form.useForm();\n  const { Text } = Typography;\n\n  const { updateData, createData, cargando, setCargando } =\n    useContext(CrudContext);\n\n  const dataTrabajadores = trabajadores.map((item) => {\n    return {\n      value: item.contrato_id,\n      label: item.nombre,\n    };\n  });\n\n  const [seleccionados, setSeleccionados] = useState([]);\n\n  const handleChange = (e) => {\n    setSeleccionados(e);\n  };\n\n  const [trabajadoresSeleccionados, setTrabajadoresSeleccionados] = useState(\n    []\n  );\n\n  useEffect(() => {\n    if (seleccionados.length > 0) {\n      const data = trabajadores.filter((item) =>\n        seleccionados.includes(item.contrato_id)\n      );\n      setTrabajadoresSeleccionados(data);\n    }\n  }, [seleccionados]);\n\n  const [incentivo, setIncentivo] = useState(incentivosVariosValues);\n\n  const handleData = (e, text) => {\n    if (!text && e.target) {\n      const { name, value } = e.target;\n      form.setFieldsValue({\n        [name]: value,\n      });\n      setIncentivo((values) => {\n        return { ...values, [name]: value };\n      });\n    } else {\n      form.setFieldsValue({\n        [text]: e,\n      });\n      setIncentivo((values) => {\n        return { ...values, [text]: e };\n      });\n    }\n  };\n\n  const [trabajadoresSave, setTrabajadoresSave] = useState([]);\n  useEffect(() => {\n    if (trabajadoresSeleccionados.length > 0) {\n      const data = trabajadoresSeleccionados.map((item) => {\n        return {\n          nombre: item.nombre,\n          contrato_id: item.contrato_id,\n          teletrans: item.teletrans || \"\",\n        };\n      });\n      if (dataToEdit) {\n        setTrabajadoresSave(\n          incentivo.trabajadores.map((item) => {\n            return {\n              ...item,\n              teletrans: parseFloat(item.teletrans),\n            };\n          })\n        );\n      } else {\n        setTrabajadoresSave(data);\n      }\n    }\n  }, [trabajadoresSeleccionados]);\n\n  const handleDataTrabajador = (e, id) => {\n    const index = trabajadoresSave.findIndex((item) => item.contrato_id === id);\n    trabajadoresSave[index] = {\n      ...trabajadoresSave[index],\n      teletrans: parseFloat(e.target.value),\n    };\n    setTrabajadoresSave([...trabajadoresSave]);\n  };\n\n  const totalTeletrans = () => {\n    let total = 0;\n    trabajadoresSave.forEach((item) => {\n      total += item.teletrans;\n    });\n    return total;\n  };\n\n  const handleSubmit = async () => {\n    const route = \"pago/programacion/multiple\";\n\n    setCargando(true);\n    const data = {\n      observacion: incentivo.observacion,\n      fecha_pago: dayjs(incentivo.fecha_pago).format(\"YYYY-MM-DD\") || \"\",\n      teletrans: totalTeletrans(),\n      tipo: \"pago\",\n      trabajadores: trabajadoresSave.map((item) => {\n        return {\n          contrato_id: item.contrato_id,\n          teletrans: item.teletrans,\n        };\n      }),\n    };\n    if (dataToEdit) {\n      const response = await updateData(\n        data,\n        incentivo.pago_id,\n        \"pago/multiple\"\n      );\n      if (response) {\n        notificacion(response.status, response.msg);\n        actualizarTabla();\n        handleClose();\n      }\n    } else {\n      const response = await createData(data, route);\n      if (response) {\n        notificacion(response.status, response.msg);\n        actualizarTabla();\n        handleClose();\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (dataToEdit) {\n      setIncentivo({\n        ...dataToEdit,\n        fecha_pago: dayjs(dataToEdit.fecha_pago).format(\"YYYY-MM-DD\"),\n      });\n      setSeleccionados(dataToEdit.trabajadores.map((item) => item.contrato_id));\n      setTrabajadoresSave(dataToEdit.trabajadores);\n    }\n  }, [dataToEdit]);\n\n  const handleClose = () => {\n    setDataToEdit(null);\n    closeModal();\n    closeModalSubmit();\n  };\n\n  return (\n    <MainModal\n      open={open}\n      closeModal={dataToEdit ? handleClose : closeModal}\n      title=\"Juntar Teletrans\"\n      width={800}\n    >\n      <Form\n        form={form}\n        className=\"modal-body\"\n        onFinish={handleSubmit}\n        layout=\"vertical\"\n      >\n        <Divider orientation=\"left\">Datos</Divider>\n        <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n          <Form.Item label=\"Seleccione trabajadores\">\n            <Select\n              mode=\"multiple\"\n              placeholder=\"Seleccione trabajadores\"\n              style={{ width: \"100%\" }}\n              allowClear\n              onChange={handleChange}\n              options={dataTrabajadores}\n              disabled={dataToEdit ? true : false}\n            />\n          </Form.Item>\n          <Form.Item label=\"Observación\">\n            <Input\n              name=\"observacion\"\n              value={incentivo.observacion}\n              placeholder=\"Observación\"\n              onChange={(e) => handleData(e)}\n            />\n          </Form.Item>\n          <Form.Item label=\"Fecha\">\n            <ConfigProvider locale={locale}>\n              <DatePicker\n                allowClear={false}\n                value={dayjs(incentivo.fecha_pago)}\n                name=\"fecha_pago\"\n                placeholder=\"Fecha de Pago\"\n                picker=\"day\"\n                onChange={(e) => handleData(e, \"fecha_pago\")}\n                style={{\n                  width: \"100%\",\n                }}\n                format={\"YYYY-MM-DD\"}\n              />\n            </ConfigProvider>\n          </Form.Item>\n        </Space>\n        <Divider orientation=\"left\">Trabajadores</Divider>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: 4,\n          }}\n        >\n          <Card style={{ width: \"100%\" }}>\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={trabajadoresSave}\n              renderItem={(item) => (\n                <List.Item>\n                  <Row key={item.contrato_id} style={{ width: \"100%\" }}>\n                    <Col span={18}>\n                      <Space direction=\"vertical\">{item.nombre}</Space>\n                    </Col>\n                    <Col span={6}>\n                      <Space direction=\"vertical\">\n                        <Input\n                          value={item.teletrans}\n                          placeholder=\"Teletrans\"\n                          type=\"number\"\n                          min={0}\n                          onChange={(e) =>\n                            handleDataTrabajador(e, item.contrato_id)\n                          }\n                          required\n                        />\n                      </Space>\n                    </Col>\n                  </Row>\n                </List.Item>\n              )}\n            />\n            <Space\n              direction=\"horizontal\"\n              style={{\n                width: \"100%\",\n                justifyContent: \"end\",\n                alignItems: \"center\",\n                padding: 24,\n              }}\n            >\n              <Text type={totalTeletrans() % 4 === 0 ? \"success\" : \"danger\"}>\n                TOTAL DE TELETRANS\n              </Text>\n              <Alert\n                message={totalTeletrans()}\n                type={totalTeletrans() % 4 === 0 ? \"success\" : \"error\"}\n              />\n            </Space>\n          </Card>\n        </div>\n        <Space\n          direction=\"horizontal\"\n          style={{\n            width: \"100%\",\n            marginTop: 20,\n            justifyContent: \"end\",\n          }}\n        >\n          <Button onClick={closeModal}>Cancelar</Button>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            icon={<AiOutlineForm />}\n            loading={cargando ? true : false}\n          >\n            {/* {dataToEdit ? \"Editar\" : \"Registrar\"} */}\n            Registrar\n          </Button>\n        </Space>\n      </Form>\n    </MainModal>\n  );\n}\nexport default ModalJuntarTeletrans;\n","import { Button, Form, Space } from \"antd\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { CrudContext } from \"../../../context/CrudContext\";\nimport { incentivoValues } from \"../../../data/initalValues\";\nimport MainModal from \"../../modal/MainModal\";\nimport { notificacion } from \"../../../helpers/mensajes\";\nimport { AiOutlineForm, AiOutlineTeam } from \"react-icons/ai\";\nimport { modalIncentivo, modalPagoIndividual } from \"../../../data/FormValues\";\nimport dayjs from \"dayjs\";\nimport ModalJuntarTeletrans from \"./ModalJuntarTeletrans\";\nimport ButtonAdd from \"../../Button/ButtonAdd\";\nimport { pagosLayout } from \"../../../data/dataTable\";\n\nfunction ModalPagosIndividual({ actualizarTabla, modal, setModal }) {\n  const [form] = Form.useForm();\n\n  const {\n    createData,\n    getData,\n    cargando,\n    setCargando,\n    setDataToEdit,\n    dataToEdit,\n    updateData,\n  } = useContext(CrudContext);\n\n  const [incentivo, setIncentivo] = useState(incentivoValues);\n  const [trabajadores, setTrabajadores] = useState([]);\n\n  const getAllTrabajadores = async () => {\n    const response = await getData(\"trabajador/aprobado\");\n    setTrabajadores(response.data);\n  };\n\n  useEffect(() => {\n    getAllTrabajadores();\n  }, []);\n\n  useEffect(() => {\n    if (dataToEdit) {\n      setIncentivo({\n        ...dataToEdit,\n        nombre: dataToEdit.trabajadores[0].nombre,\n        teletrans: parseFloat(dataToEdit.trabajadores[0].teletrans),\n        observacion: dataToEdit.observacion,\n        fecha_pago: dayjs(dataToEdit.fecha_pago).format(\"YYYY-MM-DD\"),\n      });\n      form.setFieldsValue({\n        ...dataToEdit,\n        nombre: dataToEdit.trabajadores[0].nombre,\n        teletrans: parseFloat(dataToEdit.trabajadores[0].teletrans),\n        observacion: dataToEdit.observacion,\n        fecha_pago: dayjs(dataToEdit.fecha_pago).format(\"YYYY-MM-DD\"),\n      });\n    } else {\n      setIncentivo(incentivoValues);\n    }\n  }, [dataToEdit]);\n\n  const handleData = (e, text) => {\n    if (!text && e.target) {\n      const { name, value } = e.target;\n      form.setFieldsValue({\n        [name]: value,\n      });\n      setIncentivo((values) => {\n        return { ...values, [name]: value };\n      });\n    } else {\n      form.setFieldsValue({\n        [text]: e,\n      });\n      setIncentivo((values) => {\n        return { ...values, [text]: e };\n      });\n    }\n  };\n\n  const handleSubmit = async () => {\n    const route = \"pago/programacion\";\n    setCargando(true);\n    const incentivoData = {\n      contrato_id: incentivo.contrato_id || \"\",\n      observacion: incentivo.observacion || \"\",\n      fecha_pago: dayjs(incentivo.fecha_pago).format(\"YYYY-MM-DD\") || \"\",\n      teletrans: parseFloat(incentivo.teletrans) || 0,\n      tipo: \"pago\",\n    };\n    if (dataToEdit) {\n      const response = await updateData(\n        incentivoData,\n        dataToEdit.pago_id,\n        \"pago\"\n      );\n      if (response) {\n        notificacion(response.status, response.msg);\n        actualizarTabla();\n        closeModal();\n      }\n    } else {\n      const response = await createData(incentivoData, route);\n      if (response) {\n        notificacion(response.status, response.msg);\n        actualizarTabla();\n        closeModal();\n      }\n    }\n  };\n  const closeModal = () => {\n    setModal(false);\n    setDataToEdit(null);\n    setCargando(false);\n    setIncentivo(incentivoValues);\n  };\n\n  const formData = modalPagoIndividual(\n    incentivo,\n    handleData,\n    trabajadores,\n    dataToEdit\n  );\n\n  const [modalTeletrans, setModalTeletrans] = useState(false);\n  const handleOpenModalTeletrans = () => {\n    setModalTeletrans(true);\n  };\n\n  const handleCloseModalTeletrans = () => {\n    setModalTeletrans(false);\n  };\n\n  return (\n    <>\n      <MainModal\n        className={\"modal-usuario\"}\n        title={dataToEdit ? \"Editar programación\" : \"Registrar programación\"}\n        open={modal}\n        width={400}\n        closeModal={closeModal}\n      >\n        {!dataToEdit && (\n          <Space\n            direction=\"horizontal\"\n            style={{ width: \"100%\", justifyContent: \"end\" }}\n          >\n            <ButtonAdd\n              title=\"Juntar Teletrans\"\n              onClick={handleOpenModalTeletrans}\n              icon={<AiOutlineTeam />}\n            />\n          </Space>\n        )}\n        <Form\n          form={form}\n          className=\"modal-body\"\n          onFinish={handleSubmit}\n          layout=\"horizontal\"\n        >\n          {formData.map((item, i) => (\n            <Form.Item\n              className={item.className}\n              key={i}\n              name={item.name}\n              rules={item.rules}\n              style={{ marginBottom: \"8px\" }}\n            >\n              <>\n                {item.label}\n                {item.type}\n              </>\n            </Form.Item>\n          ))}\n\n          <Form.Item className=\"button-container\">\n            <Button\n              htmlType=\"submit\"\n              icon={<AiOutlineForm />}\n              loading={cargando ? true : false}\n            >\n              {dataToEdit ? \"Editar\" : \"Registrar\"}\n            </Button>\n          </Form.Item>\n        </Form>\n      </MainModal>\n      {modalTeletrans && (\n        <ModalJuntarTeletrans\n          open={modalTeletrans}\n          closeModal={handleCloseModalTeletrans}\n          trabajadores={trabajadores}\n          actualizarTabla={actualizarTabla}\n          closeModalSubmit={closeModal}\n        />\n      )}\n    </>\n  );\n}\nexport default ModalPagosIndividual;\n","import { Col, Empty, Row } from \"antd\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { AiOutlineForm } from \"react-icons/ai\";\nimport { CrudContext } from \"../../../context/CrudContext\";\nimport { incentivosLayout } from \"../../../data/dataTable\";\nimport { notificacion } from \"../../../helpers/mensajes\";\nimport ButtonAdd from \"../../Button/ButtonAdd\";\nimport Cargando from \"../../cargando/Cargando\";\nimport Header from \"../../header/Header\";\nimport TablaIncentivos from \"../../tabla/TablaIncentivos\";\nimport ModalJuntarTeletrans from \"./ModalJuntarTeletrans\";\nimport ModalPagosIndividual from \"./ModalPagosIndividual\";\n\nconst PagosLayout = () => {\n  const { getData, dataToEdit, setDataToEdit, deleteData } =\n    useContext(CrudContext);\n\n  const [cargando, setCargando] = useState(false);\n  const [modal, setModal] = useState(false);\n\n  const [incentivos, setIncentivos] = useState([]);\n\n  const getIncentivos = async () => {\n    const response = await getData(\"pago/individual/lista\");\n    if (response) {\n      const filterNull = response.data.filter((item) => item !== null);\n      setIncentivos(filterNull);\n      setCargando(false);\n    }\n  };\n\n  const [trabajadores, setTrabajadores] = useState([]);\n\n  const getAllTrabajadores = async () => {\n    const response = await getData(\"incentivo/trabajadores\");\n    setTrabajadores(response.data);\n  };\n  useEffect(() => {\n    getIncentivos();\n    getAllTrabajadores();\n  }, []);\n\n  const handleEdit = (e) => {\n    if (e.trabajadores.length > 1) {\n      handleOpenModalJuntar(true);\n    } else {\n      setModal(true);\n    }\n    setDataToEdit(e);\n  };\n\n  const handleDelete = async (e) => {\n    const response = await deleteData(\"pago\", e);\n    if (response) {\n      notificacion(response.status, response.msg);\n      getIncentivos();\n    }\n  };\n\n  const columns = incentivosLayout(handleEdit, handleDelete);\n\n  const [modalJuntar, setModalJuntar] = useState(false);\n\n  const handleOpenModalJuntar = () => {\n    setModalJuntar(true);\n  };\n\n  const handleCloseModalJuntar = () => {\n    setModalJuntar(false);\n  };\n\n  return (\n    <>\n      <Header text={\"Programacion de pagos\"} ruta={\"/pago\"} />\n      <div className=\"margenes\">\n        <Row align=\"middle\">\n          <Col span={18}></Col>\n          <Col span={6} align=\"end\">\n            <ButtonAdd\n              title=\"Programar pago\"\n              onClick={() => setModal(true)}\n              icon={<AiOutlineForm />}\n            />\n          </Col>\n        </Row>\n        {incentivos?.length > 0 ? (\n          <TablaIncentivos columns={columns} table={incentivos} />\n        ) : (\n          <>\n            {cargando ? (\n              <Cargando />\n            ) : (\n              <Empty\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                description={<span>No hay registros para mostrar.</span>}\n              />\n            )}\n          </>\n        )}\n      </div>\n      {modal && (\n        <ModalPagosIndividual\n          actualizarTabla={getIncentivos}\n          modal={modal}\n          setModal={setModal}\n        />\n      )}\n      {modalJuntar && (\n        <ModalJuntarTeletrans\n          closeModal={handleCloseModalJuntar}\n          open={modalJuntar}\n          actualizarTabla={getIncentivos}\n          dataToEdit={dataToEdit}\n          setDataToEdit={setDataToEdit}\n          trabajadores={trabajadores}\n        />\n      )}\n    </>\n  );\n};\n\nexport default PagosLayout;\n"],"names":["open","closeModal","trabajadores","actualizarTabla","closeModalSubmit","dataToEdit","setDataToEdit","Form","form","Text","Typography","useContext","CrudContext","updateData","createData","cargando","setCargando","dataTrabajadores","map","item","value","contrato_id","label","nombre","useState","seleccionados","setSeleccionados","trabajadoresSeleccionados","setTrabajadoresSeleccionados","useEffect","length","data","filter","includes","incentivosVariosValues","incentivo","setIncentivo","handleData","e","text","target","name","setFieldsValue","values","trabajadoresSave","setTrabajadoresSave","teletrans","parseFloat","totalTeletrans","total","forEach","handleSubmit","route","observacion","fecha_pago","dayjs","format","tipo","pago_id","response","notificacion","status","msg","handleClose","MainModal","title","width","className","onFinish","layout","orientation","direction","style","mode","placeholder","allowClear","onChange","options","disabled","locale","picker","display","flexDirection","gap","itemLayout","dataSource","renderItem","span","type","min","id","index","findIndex","handleDataTrabajador","required","justifyContent","alignItems","padding","message","marginTop","onClick","htmlType","icon","loading","modal","setModal","getData","incentivoValues","setTrabajadores","getAllTrabajadores","incentivoData","formData","modalPagoIndividual","modalTeletrans","setModalTeletrans","ButtonAdd","i","rules","marginBottom","deleteData","incentivos","setIncentivos","getIncentivos","filterNull","handleDelete","columns","incentivosLayout","handleOpenModalJuntar","modalJuntar","setModalJuntar","Header","ruta","align","TablaIncentivos","table","Cargando","image","Empty","description"],"sourceRoot":""}